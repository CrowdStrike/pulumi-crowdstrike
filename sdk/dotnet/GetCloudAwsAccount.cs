// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CrowdStrike.Crowdstrike
{
    public static class GetCloudAwsAccount
    {
        /// <summary>
        /// This data source provides information about AWS accounts in Falcon.
        /// 
        /// ## API Scopes
        /// 
        /// The following API scopes are required:
        /// 
        /// - Cloud security AWS registration | Read &amp; Write
        /// - CSPM registration | Read &amp; Write
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Crowdstrike = Pulumi.Crowdstrike;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Crowdstrike.GetCloudAwsAccount.Invoke();
        /// 
        ///     var specific = Crowdstrike.GetCloudAwsAccount.Invoke(new()
        ///     {
        ///         AccountId = "123456789012",
        ///     });
        /// 
        ///     var org = Crowdstrike.GetCloudAwsAccount.Invoke(new()
        ///     {
        ///         OrganizationId = "o-123456789012",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudAwsAccountResult> InvokeAsync(GetCloudAwsAccountArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudAwsAccountResult>("crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount", args ?? new GetCloudAwsAccountArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides information about AWS accounts in Falcon.
        /// 
        /// ## API Scopes
        /// 
        /// The following API scopes are required:
        /// 
        /// - Cloud security AWS registration | Read &amp; Write
        /// - CSPM registration | Read &amp; Write
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Crowdstrike = Pulumi.Crowdstrike;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Crowdstrike.GetCloudAwsAccount.Invoke();
        /// 
        ///     var specific = Crowdstrike.GetCloudAwsAccount.Invoke(new()
        ///     {
        ///         AccountId = "123456789012",
        ///     });
        /// 
        ///     var org = Crowdstrike.GetCloudAwsAccount.Invoke(new()
        ///     {
        ///         OrganizationId = "o-123456789012",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudAwsAccountResult> Invoke(GetCloudAwsAccountInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudAwsAccountResult>("crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount", args ?? new GetCloudAwsAccountInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source provides information about AWS accounts in Falcon.
        /// 
        /// ## API Scopes
        /// 
        /// The following API scopes are required:
        /// 
        /// - Cloud security AWS registration | Read &amp; Write
        /// - CSPM registration | Read &amp; Write
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Crowdstrike = Pulumi.Crowdstrike;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Crowdstrike.GetCloudAwsAccount.Invoke();
        /// 
        ///     var specific = Crowdstrike.GetCloudAwsAccount.Invoke(new()
        ///     {
        ///         AccountId = "123456789012",
        ///     });
        /// 
        ///     var org = Crowdstrike.GetCloudAwsAccount.Invoke(new()
        ///     {
        ///         OrganizationId = "o-123456789012",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudAwsAccountResult> Invoke(GetCloudAwsAccountInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudAwsAccountResult>("crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount", args ?? new GetCloudAwsAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudAwsAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organization_id filter for OR matching
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with account_id filter for OR matching
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        public GetCloudAwsAccountArgs()
        {
        }
        public static new GetCloudAwsAccountArgs Empty => new GetCloudAwsAccountArgs();
    }

    public sealed class GetCloudAwsAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organization_id filter for OR matching
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with account_id filter for OR matching
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public GetCloudAwsAccountInvokeArgs()
        {
        }
        public static new GetCloudAwsAccountInvokeArgs Empty => new GetCloudAwsAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudAwsAccountResult
    {
        /// <summary>
        /// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organization_id filter for OR matching
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The list of AWS accounts
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudAwsAccountAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with account_id filter for OR matching
        /// </summary>
        public readonly string? OrganizationId;

        [OutputConstructor]
        private GetCloudAwsAccountResult(
            string? accountId,

            ImmutableArray<Outputs.GetCloudAwsAccountAccountResult> accounts,

            string id,

            string? organizationId)
        {
            AccountId = accountId;
            Accounts = accounts;
            Id = id;
            OrganizationId = organizationId;
        }
    }
}
