// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CrowdStrike.Crowdstrike
{
    /// <summary>
    /// This resource allows you set the precedence of Prevention Policies based on the order of IDs.
    /// 
    /// ## API Scopes
    /// 
    /// The following API scopes are required:
    /// 
    /// - Prevention policies | Read &amp; Write
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Crowdstrike = CrowdStrike.Crowdstrike;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Crowdstrike.PreventionPolicyPrecedence("example", new()
    ///     {
    ///         Ids = new[]
    ///         {
    ///             "a1j09y3yq0wnrpb5o6jlij9e4f40k6lq",
    ///             "2asia54xti93bg0jbr5hfpqqbhxbyeoa",
    ///             "xuzq8hs1uyc2s7zdar3fli0shiyl22vc",
    ///         },
    ///         PlatformName = "linux",
    ///         Enforcement = "dynamic",
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["preventionPolicyPrecedence"] = example,
    ///     };
    /// });
    /// ```
    /// </summary>
    [CrowdstrikeResourceType("crowdstrike:index/preventionPolicyPrecedence:PreventionPolicyPrecedence")]
    public partial class PreventionPolicyPrecedence : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The enforcement type for this resource. `strict` requires all non-default prevention policy ids for platform to be provided. `dynamic` will ensure the provided policies have precedence over others. When using dynamic, policy ids not included in `ids` will retain their current ordering after the managed ids.
        /// </summary>
        [Output("enforcement")]
        public Output<string> Enforcement { get; private set; } = null!;

        /// <summary>
        /// The policy ids in order. The first ID specified will have the highest precedence and the last ID specified will have the lowest.
        /// </summary>
        [Output("ids")]
        public Output<ImmutableArray<string>> Ids { get; private set; } = null!;

        [Output("lastUpdated")]
        public Output<string> LastUpdated { get; private set; } = null!;

        /// <summary>
        /// That platform of the prevention policies. (Windows, Mac, Linux)
        /// </summary>
        [Output("platformName")]
        public Output<string> PlatformName { get; private set; } = null!;


        /// <summary>
        /// Create a PreventionPolicyPrecedence resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreventionPolicyPrecedence(string name, PreventionPolicyPrecedenceArgs args, CustomResourceOptions? options = null)
            : base("crowdstrike:index/preventionPolicyPrecedence:PreventionPolicyPrecedence", name, args ?? new PreventionPolicyPrecedenceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreventionPolicyPrecedence(string name, Input<string> id, PreventionPolicyPrecedenceState? state = null, CustomResourceOptions? options = null)
            : base("crowdstrike:index/preventionPolicyPrecedence:PreventionPolicyPrecedence", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/crowdstrike/pulumi-crowdstrike",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreventionPolicyPrecedence resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreventionPolicyPrecedence Get(string name, Input<string> id, PreventionPolicyPrecedenceState? state = null, CustomResourceOptions? options = null)
        {
            return new PreventionPolicyPrecedence(name, id, state, options);
        }
    }

    public sealed class PreventionPolicyPrecedenceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The enforcement type for this resource. `strict` requires all non-default prevention policy ids for platform to be provided. `dynamic` will ensure the provided policies have precedence over others. When using dynamic, policy ids not included in `ids` will retain their current ordering after the managed ids.
        /// </summary>
        [Input("enforcement", required: true)]
        public Input<string> Enforcement { get; set; } = null!;

        [Input("ids", required: true)]
        private InputList<string>? _ids;

        /// <summary>
        /// The policy ids in order. The first ID specified will have the highest precedence and the last ID specified will have the lowest.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// That platform of the prevention policies. (Windows, Mac, Linux)
        /// </summary>
        [Input("platformName", required: true)]
        public Input<string> PlatformName { get; set; } = null!;

        public PreventionPolicyPrecedenceArgs()
        {
        }
        public static new PreventionPolicyPrecedenceArgs Empty => new PreventionPolicyPrecedenceArgs();
    }

    public sealed class PreventionPolicyPrecedenceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The enforcement type for this resource. `strict` requires all non-default prevention policy ids for platform to be provided. `dynamic` will ensure the provided policies have precedence over others. When using dynamic, policy ids not included in `ids` will retain their current ordering after the managed ids.
        /// </summary>
        [Input("enforcement")]
        public Input<string>? Enforcement { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The policy ids in order. The first ID specified will have the highest precedence and the last ID specified will have the lowest.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        /// <summary>
        /// That platform of the prevention policies. (Windows, Mac, Linux)
        /// </summary>
        [Input("platformName")]
        public Input<string>? PlatformName { get; set; }

        public PreventionPolicyPrecedenceState()
        {
        }
        public static new PreventionPolicyPrecedenceState Empty => new PreventionPolicyPrecedenceState();
    }
}
