// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package crowdstrike

import (
	"context"
	"reflect"

	"github.com/crowdstrike/pulumi-crowdstrike/sdk/go/crowdstrike/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FilevantagePolicyScheduledExclusion struct {
	// Description of the scheduled exclusion.
	Description *string `pulumi:"description"`
	// The end date of the scheduled exclusion. Format: YYYY-MM-DD
	EndDate *string `pulumi:"endDate"`
	// The end time of the scheduled exclusion in 24 hour format. Format: HH:MM
	EndTime *string `pulumi:"endTime"`
	// Identifier for the scheduled exclusion.
	Id *string `pulumi:"id"`
	// Name of the scheduled exclusion.
	Name string `pulumi:"name"`
	// A comma separated list of processes to exclude changes from. Example: **/run*me.sh excludes changes made by run*me.sh in any location
	Processes *string `pulumi:"processes"`
	// Repeated scheduled exclusion
	Repeated *FilevantagePolicyScheduledExclusionRepeated `pulumi:"repeated"`
	// The start date of the scheduled exclusion. Format: YYYY-MM-DD
	StartDate string `pulumi:"startDate"`
	// The start time of the scheduled exclusion in 24 hour format. Format: HH:MM
	StartTime string `pulumi:"startTime"`
	// The timezone to use for the time fields. See https://en.wikipedia.org/wiki/List*of*tz*database*time_zones.
	Timezone string `pulumi:"timezone"`
	// A comma separated list of users to exclude changes from. Example: user1,user2,admin* excludes changes made by user1, user2, and any user starting with admin
	Users *string `pulumi:"users"`
}

// FilevantagePolicyScheduledExclusionInput is an input type that accepts FilevantagePolicyScheduledExclusionArgs and FilevantagePolicyScheduledExclusionOutput values.
// You can construct a concrete instance of `FilevantagePolicyScheduledExclusionInput` via:
//
//	FilevantagePolicyScheduledExclusionArgs{...}
type FilevantagePolicyScheduledExclusionInput interface {
	pulumi.Input

	ToFilevantagePolicyScheduledExclusionOutput() FilevantagePolicyScheduledExclusionOutput
	ToFilevantagePolicyScheduledExclusionOutputWithContext(context.Context) FilevantagePolicyScheduledExclusionOutput
}

type FilevantagePolicyScheduledExclusionArgs struct {
	// Description of the scheduled exclusion.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The end date of the scheduled exclusion. Format: YYYY-MM-DD
	EndDate pulumi.StringPtrInput `pulumi:"endDate"`
	// The end time of the scheduled exclusion in 24 hour format. Format: HH:MM
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Identifier for the scheduled exclusion.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the scheduled exclusion.
	Name pulumi.StringInput `pulumi:"name"`
	// A comma separated list of processes to exclude changes from. Example: **/run*me.sh excludes changes made by run*me.sh in any location
	Processes pulumi.StringPtrInput `pulumi:"processes"`
	// Repeated scheduled exclusion
	Repeated FilevantagePolicyScheduledExclusionRepeatedPtrInput `pulumi:"repeated"`
	// The start date of the scheduled exclusion. Format: YYYY-MM-DD
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// The start time of the scheduled exclusion in 24 hour format. Format: HH:MM
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// The timezone to use for the time fields. See https://en.wikipedia.org/wiki/List*of*tz*database*time_zones.
	Timezone pulumi.StringInput `pulumi:"timezone"`
	// A comma separated list of users to exclude changes from. Example: user1,user2,admin* excludes changes made by user1, user2, and any user starting with admin
	Users pulumi.StringPtrInput `pulumi:"users"`
}

func (FilevantagePolicyScheduledExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilevantagePolicyScheduledExclusion)(nil)).Elem()
}

func (i FilevantagePolicyScheduledExclusionArgs) ToFilevantagePolicyScheduledExclusionOutput() FilevantagePolicyScheduledExclusionOutput {
	return i.ToFilevantagePolicyScheduledExclusionOutputWithContext(context.Background())
}

func (i FilevantagePolicyScheduledExclusionArgs) ToFilevantagePolicyScheduledExclusionOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantagePolicyScheduledExclusionOutput)
}

// FilevantagePolicyScheduledExclusionArrayInput is an input type that accepts FilevantagePolicyScheduledExclusionArray and FilevantagePolicyScheduledExclusionArrayOutput values.
// You can construct a concrete instance of `FilevantagePolicyScheduledExclusionArrayInput` via:
//
//	FilevantagePolicyScheduledExclusionArray{ FilevantagePolicyScheduledExclusionArgs{...} }
type FilevantagePolicyScheduledExclusionArrayInput interface {
	pulumi.Input

	ToFilevantagePolicyScheduledExclusionArrayOutput() FilevantagePolicyScheduledExclusionArrayOutput
	ToFilevantagePolicyScheduledExclusionArrayOutputWithContext(context.Context) FilevantagePolicyScheduledExclusionArrayOutput
}

type FilevantagePolicyScheduledExclusionArray []FilevantagePolicyScheduledExclusionInput

func (FilevantagePolicyScheduledExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilevantagePolicyScheduledExclusion)(nil)).Elem()
}

func (i FilevantagePolicyScheduledExclusionArray) ToFilevantagePolicyScheduledExclusionArrayOutput() FilevantagePolicyScheduledExclusionArrayOutput {
	return i.ToFilevantagePolicyScheduledExclusionArrayOutputWithContext(context.Background())
}

func (i FilevantagePolicyScheduledExclusionArray) ToFilevantagePolicyScheduledExclusionArrayOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantagePolicyScheduledExclusionArrayOutput)
}

type FilevantagePolicyScheduledExclusionOutput struct{ *pulumi.OutputState }

func (FilevantagePolicyScheduledExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilevantagePolicyScheduledExclusion)(nil)).Elem()
}

func (o FilevantagePolicyScheduledExclusionOutput) ToFilevantagePolicyScheduledExclusionOutput() FilevantagePolicyScheduledExclusionOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionOutput) ToFilevantagePolicyScheduledExclusionOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionOutput {
	return o
}

// Description of the scheduled exclusion.
func (o FilevantagePolicyScheduledExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The end date of the scheduled exclusion. Format: YYYY-MM-DD
func (o FilevantagePolicyScheduledExclusionOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// The end time of the scheduled exclusion in 24 hour format. Format: HH:MM
func (o FilevantagePolicyScheduledExclusionOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Identifier for the scheduled exclusion.
func (o FilevantagePolicyScheduledExclusionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the scheduled exclusion.
func (o FilevantagePolicyScheduledExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) string { return v.Name }).(pulumi.StringOutput)
}

// A comma separated list of processes to exclude changes from. Example: **/run*me.sh excludes changes made by run*me.sh in any location
func (o FilevantagePolicyScheduledExclusionOutput) Processes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *string { return v.Processes }).(pulumi.StringPtrOutput)
}

// Repeated scheduled exclusion
func (o FilevantagePolicyScheduledExclusionOutput) Repeated() FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *FilevantagePolicyScheduledExclusionRepeated {
		return v.Repeated
	}).(FilevantagePolicyScheduledExclusionRepeatedPtrOutput)
}

// The start date of the scheduled exclusion. Format: YYYY-MM-DD
func (o FilevantagePolicyScheduledExclusionOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) string { return v.StartDate }).(pulumi.StringOutput)
}

// The start time of the scheduled exclusion in 24 hour format. Format: HH:MM
func (o FilevantagePolicyScheduledExclusionOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) string { return v.StartTime }).(pulumi.StringOutput)
}

// The timezone to use for the time fields. See https://en.wikipedia.org/wiki/List*of*tz*database*time_zones.
func (o FilevantagePolicyScheduledExclusionOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) string { return v.Timezone }).(pulumi.StringOutput)
}

// A comma separated list of users to exclude changes from. Example: user1,user2,admin* excludes changes made by user1, user2, and any user starting with admin
func (o FilevantagePolicyScheduledExclusionOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusion) *string { return v.Users }).(pulumi.StringPtrOutput)
}

type FilevantagePolicyScheduledExclusionArrayOutput struct{ *pulumi.OutputState }

func (FilevantagePolicyScheduledExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilevantagePolicyScheduledExclusion)(nil)).Elem()
}

func (o FilevantagePolicyScheduledExclusionArrayOutput) ToFilevantagePolicyScheduledExclusionArrayOutput() FilevantagePolicyScheduledExclusionArrayOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionArrayOutput) ToFilevantagePolicyScheduledExclusionArrayOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionArrayOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionArrayOutput) Index(i pulumi.IntInput) FilevantagePolicyScheduledExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilevantagePolicyScheduledExclusion {
		return vs[0].([]FilevantagePolicyScheduledExclusion)[vs[1].(int)]
	}).(FilevantagePolicyScheduledExclusionOutput)
}

type FilevantagePolicyScheduledExclusionRepeated struct {
	// If the exclusion is all day.
	AllDay bool `pulumi:"allDay"`
	// The days of the month to allow the exclusion. Required if frequency is set to monthly and monthlyOccurrence is set to days. Options: 1-31
	DaysOfMonths []int `pulumi:"daysOfMonths"`
	// The days of the week to allow the exclusion. Required if frequency is set to weekly or set to monthly and monthlyOccurrence is set to a week. Options: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday
	DaysOfWeeks []string `pulumi:"daysOfWeeks"`
	// The end time to end the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
	EndTime *string `pulumi:"endTime"`
	// The frequency of the exclusion. Options: daily, weekly, monthly
	Frequency string `pulumi:"frequency"`
	// The monthly occurrence of the exclusion. Either specify a week (first, second, third, fourth) or set to days to specify days of the month. Options: first, second, third, fourth, days. Required if frequency is set to monthly
	MonthlyOccurrence *string `pulumi:"monthlyOccurrence"`
	// The start time to allow the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
	StartTime *string `pulumi:"startTime"`
}

// FilevantagePolicyScheduledExclusionRepeatedInput is an input type that accepts FilevantagePolicyScheduledExclusionRepeatedArgs and FilevantagePolicyScheduledExclusionRepeatedOutput values.
// You can construct a concrete instance of `FilevantagePolicyScheduledExclusionRepeatedInput` via:
//
//	FilevantagePolicyScheduledExclusionRepeatedArgs{...}
type FilevantagePolicyScheduledExclusionRepeatedInput interface {
	pulumi.Input

	ToFilevantagePolicyScheduledExclusionRepeatedOutput() FilevantagePolicyScheduledExclusionRepeatedOutput
	ToFilevantagePolicyScheduledExclusionRepeatedOutputWithContext(context.Context) FilevantagePolicyScheduledExclusionRepeatedOutput
}

type FilevantagePolicyScheduledExclusionRepeatedArgs struct {
	// If the exclusion is all day.
	AllDay pulumi.BoolInput `pulumi:"allDay"`
	// The days of the month to allow the exclusion. Required if frequency is set to monthly and monthlyOccurrence is set to days. Options: 1-31
	DaysOfMonths pulumi.IntArrayInput `pulumi:"daysOfMonths"`
	// The days of the week to allow the exclusion. Required if frequency is set to weekly or set to monthly and monthlyOccurrence is set to a week. Options: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday
	DaysOfWeeks pulumi.StringArrayInput `pulumi:"daysOfWeeks"`
	// The end time to end the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency of the exclusion. Options: daily, weekly, monthly
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The monthly occurrence of the exclusion. Either specify a week (first, second, third, fourth) or set to days to specify days of the month. Options: first, second, third, fourth, days. Required if frequency is set to monthly
	MonthlyOccurrence pulumi.StringPtrInput `pulumi:"monthlyOccurrence"`
	// The start time to allow the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (FilevantagePolicyScheduledExclusionRepeatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilevantagePolicyScheduledExclusionRepeated)(nil)).Elem()
}

func (i FilevantagePolicyScheduledExclusionRepeatedArgs) ToFilevantagePolicyScheduledExclusionRepeatedOutput() FilevantagePolicyScheduledExclusionRepeatedOutput {
	return i.ToFilevantagePolicyScheduledExclusionRepeatedOutputWithContext(context.Background())
}

func (i FilevantagePolicyScheduledExclusionRepeatedArgs) ToFilevantagePolicyScheduledExclusionRepeatedOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionRepeatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantagePolicyScheduledExclusionRepeatedOutput)
}

func (i FilevantagePolicyScheduledExclusionRepeatedArgs) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutput() FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return i.ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(context.Background())
}

func (i FilevantagePolicyScheduledExclusionRepeatedArgs) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantagePolicyScheduledExclusionRepeatedOutput).ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(ctx)
}

// FilevantagePolicyScheduledExclusionRepeatedPtrInput is an input type that accepts FilevantagePolicyScheduledExclusionRepeatedArgs, FilevantagePolicyScheduledExclusionRepeatedPtr and FilevantagePolicyScheduledExclusionRepeatedPtrOutput values.
// You can construct a concrete instance of `FilevantagePolicyScheduledExclusionRepeatedPtrInput` via:
//
//	        FilevantagePolicyScheduledExclusionRepeatedArgs{...}
//
//	or:
//
//	        nil
type FilevantagePolicyScheduledExclusionRepeatedPtrInput interface {
	pulumi.Input

	ToFilevantagePolicyScheduledExclusionRepeatedPtrOutput() FilevantagePolicyScheduledExclusionRepeatedPtrOutput
	ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(context.Context) FilevantagePolicyScheduledExclusionRepeatedPtrOutput
}

type filevantagePolicyScheduledExclusionRepeatedPtrType FilevantagePolicyScheduledExclusionRepeatedArgs

func FilevantagePolicyScheduledExclusionRepeatedPtr(v *FilevantagePolicyScheduledExclusionRepeatedArgs) FilevantagePolicyScheduledExclusionRepeatedPtrInput {
	return (*filevantagePolicyScheduledExclusionRepeatedPtrType)(v)
}

func (*filevantagePolicyScheduledExclusionRepeatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilevantagePolicyScheduledExclusionRepeated)(nil)).Elem()
}

func (i *filevantagePolicyScheduledExclusionRepeatedPtrType) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutput() FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return i.ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(context.Background())
}

func (i *filevantagePolicyScheduledExclusionRepeatedPtrType) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantagePolicyScheduledExclusionRepeatedPtrOutput)
}

type FilevantagePolicyScheduledExclusionRepeatedOutput struct{ *pulumi.OutputState }

func (FilevantagePolicyScheduledExclusionRepeatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilevantagePolicyScheduledExclusionRepeated)(nil)).Elem()
}

func (o FilevantagePolicyScheduledExclusionRepeatedOutput) ToFilevantagePolicyScheduledExclusionRepeatedOutput() FilevantagePolicyScheduledExclusionRepeatedOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionRepeatedOutput) ToFilevantagePolicyScheduledExclusionRepeatedOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionRepeatedOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionRepeatedOutput) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutput() FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return o.ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(context.Background())
}

func (o FilevantagePolicyScheduledExclusionRepeatedOutput) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilevantagePolicyScheduledExclusionRepeated) *FilevantagePolicyScheduledExclusionRepeated {
		return &v
	}).(FilevantagePolicyScheduledExclusionRepeatedPtrOutput)
}

// If the exclusion is all day.
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) AllDay() pulumi.BoolOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) bool { return v.AllDay }).(pulumi.BoolOutput)
}

// The days of the month to allow the exclusion. Required if frequency is set to monthly and monthlyOccurrence is set to days. Options: 1-31
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) DaysOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) []int { return v.DaysOfMonths }).(pulumi.IntArrayOutput)
}

// The days of the week to allow the exclusion. Required if frequency is set to weekly or set to monthly and monthlyOccurrence is set to a week. Options: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) []string { return v.DaysOfWeeks }).(pulumi.StringArrayOutput)
}

// The end time to end the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency of the exclusion. Options: daily, weekly, monthly
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) string { return v.Frequency }).(pulumi.StringOutput)
}

// The monthly occurrence of the exclusion. Either specify a week (first, second, third, fourth) or set to days to specify days of the month. Options: first, second, third, fourth, days. Required if frequency is set to monthly
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) MonthlyOccurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) *string { return v.MonthlyOccurrence }).(pulumi.StringPtrOutput)
}

// The start time to allow the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
func (o FilevantagePolicyScheduledExclusionRepeatedOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantagePolicyScheduledExclusionRepeated) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type FilevantagePolicyScheduledExclusionRepeatedPtrOutput struct{ *pulumi.OutputState }

func (FilevantagePolicyScheduledExclusionRepeatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilevantagePolicyScheduledExclusionRepeated)(nil)).Elem()
}

func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutput() FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) ToFilevantagePolicyScheduledExclusionRepeatedPtrOutputWithContext(ctx context.Context) FilevantagePolicyScheduledExclusionRepeatedPtrOutput {
	return o
}

func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) Elem() FilevantagePolicyScheduledExclusionRepeatedOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) FilevantagePolicyScheduledExclusionRepeated {
		if v != nil {
			return *v
		}
		var ret FilevantagePolicyScheduledExclusionRepeated
		return ret
	}).(FilevantagePolicyScheduledExclusionRepeatedOutput)
}

// If the exclusion is all day.
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) AllDay() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) *bool {
		if v == nil {
			return nil
		}
		return &v.AllDay
	}).(pulumi.BoolPtrOutput)
}

// The days of the month to allow the exclusion. Required if frequency is set to monthly and monthlyOccurrence is set to days. Options: 1-31
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) DaysOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) []int {
		if v == nil {
			return nil
		}
		return v.DaysOfMonths
	}).(pulumi.IntArrayOutput)
}

// The days of the week to allow the exclusion. Required if frequency is set to weekly or set to monthly and monthlyOccurrence is set to a week. Options: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) DaysOfWeeks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) []string {
		if v == nil {
			return nil
		}
		return v.DaysOfWeeks
	}).(pulumi.StringArrayOutput)
}

// The end time to end the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The frequency of the exclusion. Options: daily, weekly, monthly
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The monthly occurrence of the exclusion. Either specify a week (first, second, third, fourth) or set to days to specify days of the month. Options: first, second, third, fourth, days. Required if frequency is set to monthly
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) MonthlyOccurrence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) *string {
		if v == nil {
			return nil
		}
		return v.MonthlyOccurrence
	}).(pulumi.StringPtrOutput)
}

// The start time to allow the scheduled exclusion in 24 hour format. Format: HH:MM required if allDay is false
func (o FilevantagePolicyScheduledExclusionRepeatedPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilevantagePolicyScheduledExclusionRepeated) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type FilevantageRuleGroupRule struct {
	// Depth below the base path to monitor.
	Depth *string `pulumi:"depth"`
	// Description of the filevantage rule.
	Description string `pulumi:"description"`
	// Enable content capture for the rule. Requires watch*file*write*changes or watch*key*value*set_changes to be enabled.
	EnableContentCapture *bool `pulumi:"enableContentCapture"`
	// Represents the files, directories, registry keys, or registry values that will be excluded from monitoring.
	Exclude *string `pulumi:"exclude"`
	// Represents the changes performed by specific processes that will be excluded from monitoring.
	ExcludeProcesses *string `pulumi:"excludeProcesses"`
	// Represents the changes performed by specific users that will be excluded from monitoring.
	ExcludeUsers *string `pulumi:"excludeUsers"`
	// List of file names whose content will be monitored. Listed files must match the file include pattern and not match the file exclude pattern.
	FileNames []string `pulumi:"fileNames"`
	// Identifier for the filevantage rule.
	Id *string `pulumi:"id"`
	// Represents the files, directories, registry keys, or registry values that will be monitored. Defaults to all (*)
	Include *string `pulumi:"include"`
	// Represents the changes performed by specific processes that will be monitored.
	IncludeProcesses *string `pulumi:"includeProcesses"`
	// Represents the changes performed by specific users that will be monitored.
	IncludeUsers *string `pulumi:"includeUsers"`
	// Representing the file system or registry path to monitor. All paths must end with the path separator, e.g. c:\windows\ for windows and /usr/bin/ for linux/mac.
	Path string `pulumi:"path"`
	// Precedence of the rule in the rule group.
	Precedence *int `pulumi:"precedence"`
	// List of registry values whose content will be monitored. Listed registry values must match the registry include pattern and not match the registry exclude pattern.
	RegistryValues []string `pulumi:"registryValues"`
	// Severity to categorize change events produced by this rule.
	Severity string `pulumi:"severity"`
	// Monitor directory attribute change events.
	WatchDirectoryAttributeChanges *bool `pulumi:"watchDirectoryAttributeChanges"`
	// Monitor directory creation events.
	WatchDirectoryCreateChanges *bool `pulumi:"watchDirectoryCreateChanges"`
	// Monitor directory deletion events.
	WatchDirectoryDeleteChanges *bool `pulumi:"watchDirectoryDeleteChanges"`
	// Monitor directory permission change events.
	WatchDirectoryPermissionChanges *bool `pulumi:"watchDirectoryPermissionChanges"`
	// Monitor directory rename events.
	WatchDirectoryRenameChanges *bool `pulumi:"watchDirectoryRenameChanges"`
	// Monitor file attribute change events.
	WatchFileAttributeChanges *bool `pulumi:"watchFileAttributeChanges"`
	// Monitor file creation events.
	WatchFileCreateChanges *bool `pulumi:"watchFileCreateChanges"`
	// Monitor file deletion events.
	WatchFileDeleteChanges *bool `pulumi:"watchFileDeleteChanges"`
	// Monitor file permission change events.
	WatchFilePermissionChanges *bool `pulumi:"watchFilePermissionChanges"`
	// Monitor file rename events.
	WatchFileRenameChanges *bool `pulumi:"watchFileRenameChanges"`
	// Monitor file write events.
	WatchFileWriteChanges *bool `pulumi:"watchFileWriteChanges"`
	// Monitor registry key creation events.
	WatchKeyCreateChanges *bool `pulumi:"watchKeyCreateChanges"`
	// Monitor registry key deletion events.
	WatchKeyDeleteChanges *bool `pulumi:"watchKeyDeleteChanges"`
	// Monitor registry key permission change events.
	WatchKeyPermissionsChanges *bool `pulumi:"watchKeyPermissionsChanges"`
	// Monitor registry key rename events.
	WatchKeyRenameChanges *bool `pulumi:"watchKeyRenameChanges"`
	// Monitor registry value deletion events.
	WatchKeyValueDeleteChanges *bool `pulumi:"watchKeyValueDeleteChanges"`
	// Monitor registry value set events.
	WatchKeyValueSetChanges *bool `pulumi:"watchKeyValueSetChanges"`
}

// FilevantageRuleGroupRuleInput is an input type that accepts FilevantageRuleGroupRuleArgs and FilevantageRuleGroupRuleOutput values.
// You can construct a concrete instance of `FilevantageRuleGroupRuleInput` via:
//
//	FilevantageRuleGroupRuleArgs{...}
type FilevantageRuleGroupRuleInput interface {
	pulumi.Input

	ToFilevantageRuleGroupRuleOutput() FilevantageRuleGroupRuleOutput
	ToFilevantageRuleGroupRuleOutputWithContext(context.Context) FilevantageRuleGroupRuleOutput
}

type FilevantageRuleGroupRuleArgs struct {
	// Depth below the base path to monitor.
	Depth pulumi.StringPtrInput `pulumi:"depth"`
	// Description of the filevantage rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Enable content capture for the rule. Requires watch*file*write*changes or watch*key*value*set_changes to be enabled.
	EnableContentCapture pulumi.BoolPtrInput `pulumi:"enableContentCapture"`
	// Represents the files, directories, registry keys, or registry values that will be excluded from monitoring.
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// Represents the changes performed by specific processes that will be excluded from monitoring.
	ExcludeProcesses pulumi.StringPtrInput `pulumi:"excludeProcesses"`
	// Represents the changes performed by specific users that will be excluded from monitoring.
	ExcludeUsers pulumi.StringPtrInput `pulumi:"excludeUsers"`
	// List of file names whose content will be monitored. Listed files must match the file include pattern and not match the file exclude pattern.
	FileNames pulumi.StringArrayInput `pulumi:"fileNames"`
	// Identifier for the filevantage rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Represents the files, directories, registry keys, or registry values that will be monitored. Defaults to all (*)
	Include pulumi.StringPtrInput `pulumi:"include"`
	// Represents the changes performed by specific processes that will be monitored.
	IncludeProcesses pulumi.StringPtrInput `pulumi:"includeProcesses"`
	// Represents the changes performed by specific users that will be monitored.
	IncludeUsers pulumi.StringPtrInput `pulumi:"includeUsers"`
	// Representing the file system or registry path to monitor. All paths must end with the path separator, e.g. c:\windows\ for windows and /usr/bin/ for linux/mac.
	Path pulumi.StringInput `pulumi:"path"`
	// Precedence of the rule in the rule group.
	Precedence pulumi.IntPtrInput `pulumi:"precedence"`
	// List of registry values whose content will be monitored. Listed registry values must match the registry include pattern and not match the registry exclude pattern.
	RegistryValues pulumi.StringArrayInput `pulumi:"registryValues"`
	// Severity to categorize change events produced by this rule.
	Severity pulumi.StringInput `pulumi:"severity"`
	// Monitor directory attribute change events.
	WatchDirectoryAttributeChanges pulumi.BoolPtrInput `pulumi:"watchDirectoryAttributeChanges"`
	// Monitor directory creation events.
	WatchDirectoryCreateChanges pulumi.BoolPtrInput `pulumi:"watchDirectoryCreateChanges"`
	// Monitor directory deletion events.
	WatchDirectoryDeleteChanges pulumi.BoolPtrInput `pulumi:"watchDirectoryDeleteChanges"`
	// Monitor directory permission change events.
	WatchDirectoryPermissionChanges pulumi.BoolPtrInput `pulumi:"watchDirectoryPermissionChanges"`
	// Monitor directory rename events.
	WatchDirectoryRenameChanges pulumi.BoolPtrInput `pulumi:"watchDirectoryRenameChanges"`
	// Monitor file attribute change events.
	WatchFileAttributeChanges pulumi.BoolPtrInput `pulumi:"watchFileAttributeChanges"`
	// Monitor file creation events.
	WatchFileCreateChanges pulumi.BoolPtrInput `pulumi:"watchFileCreateChanges"`
	// Monitor file deletion events.
	WatchFileDeleteChanges pulumi.BoolPtrInput `pulumi:"watchFileDeleteChanges"`
	// Monitor file permission change events.
	WatchFilePermissionChanges pulumi.BoolPtrInput `pulumi:"watchFilePermissionChanges"`
	// Monitor file rename events.
	WatchFileRenameChanges pulumi.BoolPtrInput `pulumi:"watchFileRenameChanges"`
	// Monitor file write events.
	WatchFileWriteChanges pulumi.BoolPtrInput `pulumi:"watchFileWriteChanges"`
	// Monitor registry key creation events.
	WatchKeyCreateChanges pulumi.BoolPtrInput `pulumi:"watchKeyCreateChanges"`
	// Monitor registry key deletion events.
	WatchKeyDeleteChanges pulumi.BoolPtrInput `pulumi:"watchKeyDeleteChanges"`
	// Monitor registry key permission change events.
	WatchKeyPermissionsChanges pulumi.BoolPtrInput `pulumi:"watchKeyPermissionsChanges"`
	// Monitor registry key rename events.
	WatchKeyRenameChanges pulumi.BoolPtrInput `pulumi:"watchKeyRenameChanges"`
	// Monitor registry value deletion events.
	WatchKeyValueDeleteChanges pulumi.BoolPtrInput `pulumi:"watchKeyValueDeleteChanges"`
	// Monitor registry value set events.
	WatchKeyValueSetChanges pulumi.BoolPtrInput `pulumi:"watchKeyValueSetChanges"`
}

func (FilevantageRuleGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilevantageRuleGroupRule)(nil)).Elem()
}

func (i FilevantageRuleGroupRuleArgs) ToFilevantageRuleGroupRuleOutput() FilevantageRuleGroupRuleOutput {
	return i.ToFilevantageRuleGroupRuleOutputWithContext(context.Background())
}

func (i FilevantageRuleGroupRuleArgs) ToFilevantageRuleGroupRuleOutputWithContext(ctx context.Context) FilevantageRuleGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantageRuleGroupRuleOutput)
}

// FilevantageRuleGroupRuleArrayInput is an input type that accepts FilevantageRuleGroupRuleArray and FilevantageRuleGroupRuleArrayOutput values.
// You can construct a concrete instance of `FilevantageRuleGroupRuleArrayInput` via:
//
//	FilevantageRuleGroupRuleArray{ FilevantageRuleGroupRuleArgs{...} }
type FilevantageRuleGroupRuleArrayInput interface {
	pulumi.Input

	ToFilevantageRuleGroupRuleArrayOutput() FilevantageRuleGroupRuleArrayOutput
	ToFilevantageRuleGroupRuleArrayOutputWithContext(context.Context) FilevantageRuleGroupRuleArrayOutput
}

type FilevantageRuleGroupRuleArray []FilevantageRuleGroupRuleInput

func (FilevantageRuleGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilevantageRuleGroupRule)(nil)).Elem()
}

func (i FilevantageRuleGroupRuleArray) ToFilevantageRuleGroupRuleArrayOutput() FilevantageRuleGroupRuleArrayOutput {
	return i.ToFilevantageRuleGroupRuleArrayOutputWithContext(context.Background())
}

func (i FilevantageRuleGroupRuleArray) ToFilevantageRuleGroupRuleArrayOutputWithContext(ctx context.Context) FilevantageRuleGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantageRuleGroupRuleArrayOutput)
}

type FilevantageRuleGroupRuleOutput struct{ *pulumi.OutputState }

func (FilevantageRuleGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilevantageRuleGroupRule)(nil)).Elem()
}

func (o FilevantageRuleGroupRuleOutput) ToFilevantageRuleGroupRuleOutput() FilevantageRuleGroupRuleOutput {
	return o
}

func (o FilevantageRuleGroupRuleOutput) ToFilevantageRuleGroupRuleOutputWithContext(ctx context.Context) FilevantageRuleGroupRuleOutput {
	return o
}

// Depth below the base path to monitor.
func (o FilevantageRuleGroupRuleOutput) Depth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.Depth }).(pulumi.StringPtrOutput)
}

// Description of the filevantage rule.
func (o FilevantageRuleGroupRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) string { return v.Description }).(pulumi.StringOutput)
}

// Enable content capture for the rule. Requires watch*file*write*changes or watch*key*value*set_changes to be enabled.
func (o FilevantageRuleGroupRuleOutput) EnableContentCapture() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.EnableContentCapture }).(pulumi.BoolPtrOutput)
}

// Represents the files, directories, registry keys, or registry values that will be excluded from monitoring.
func (o FilevantageRuleGroupRuleOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// Represents the changes performed by specific processes that will be excluded from monitoring.
func (o FilevantageRuleGroupRuleOutput) ExcludeProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.ExcludeProcesses }).(pulumi.StringPtrOutput)
}

// Represents the changes performed by specific users that will be excluded from monitoring.
func (o FilevantageRuleGroupRuleOutput) ExcludeUsers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.ExcludeUsers }).(pulumi.StringPtrOutput)
}

// List of file names whose content will be monitored. Listed files must match the file include pattern and not match the file exclude pattern.
func (o FilevantageRuleGroupRuleOutput) FileNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) []string { return v.FileNames }).(pulumi.StringArrayOutput)
}

// Identifier for the filevantage rule.
func (o FilevantageRuleGroupRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Represents the files, directories, registry keys, or registry values that will be monitored. Defaults to all (*)
func (o FilevantageRuleGroupRuleOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.Include }).(pulumi.StringPtrOutput)
}

// Represents the changes performed by specific processes that will be monitored.
func (o FilevantageRuleGroupRuleOutput) IncludeProcesses() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.IncludeProcesses }).(pulumi.StringPtrOutput)
}

// Represents the changes performed by specific users that will be monitored.
func (o FilevantageRuleGroupRuleOutput) IncludeUsers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *string { return v.IncludeUsers }).(pulumi.StringPtrOutput)
}

// Representing the file system or registry path to monitor. All paths must end with the path separator, e.g. c:\windows\ for windows and /usr/bin/ for linux/mac.
func (o FilevantageRuleGroupRuleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) string { return v.Path }).(pulumi.StringOutput)
}

// Precedence of the rule in the rule group.
func (o FilevantageRuleGroupRuleOutput) Precedence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *int { return v.Precedence }).(pulumi.IntPtrOutput)
}

// List of registry values whose content will be monitored. Listed registry values must match the registry include pattern and not match the registry exclude pattern.
func (o FilevantageRuleGroupRuleOutput) RegistryValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) []string { return v.RegistryValues }).(pulumi.StringArrayOutput)
}

// Severity to categorize change events produced by this rule.
func (o FilevantageRuleGroupRuleOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) string { return v.Severity }).(pulumi.StringOutput)
}

// Monitor directory attribute change events.
func (o FilevantageRuleGroupRuleOutput) WatchDirectoryAttributeChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchDirectoryAttributeChanges }).(pulumi.BoolPtrOutput)
}

// Monitor directory creation events.
func (o FilevantageRuleGroupRuleOutput) WatchDirectoryCreateChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchDirectoryCreateChanges }).(pulumi.BoolPtrOutput)
}

// Monitor directory deletion events.
func (o FilevantageRuleGroupRuleOutput) WatchDirectoryDeleteChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchDirectoryDeleteChanges }).(pulumi.BoolPtrOutput)
}

// Monitor directory permission change events.
func (o FilevantageRuleGroupRuleOutput) WatchDirectoryPermissionChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchDirectoryPermissionChanges }).(pulumi.BoolPtrOutput)
}

// Monitor directory rename events.
func (o FilevantageRuleGroupRuleOutput) WatchDirectoryRenameChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchDirectoryRenameChanges }).(pulumi.BoolPtrOutput)
}

// Monitor file attribute change events.
func (o FilevantageRuleGroupRuleOutput) WatchFileAttributeChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchFileAttributeChanges }).(pulumi.BoolPtrOutput)
}

// Monitor file creation events.
func (o FilevantageRuleGroupRuleOutput) WatchFileCreateChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchFileCreateChanges }).(pulumi.BoolPtrOutput)
}

// Monitor file deletion events.
func (o FilevantageRuleGroupRuleOutput) WatchFileDeleteChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchFileDeleteChanges }).(pulumi.BoolPtrOutput)
}

// Monitor file permission change events.
func (o FilevantageRuleGroupRuleOutput) WatchFilePermissionChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchFilePermissionChanges }).(pulumi.BoolPtrOutput)
}

// Monitor file rename events.
func (o FilevantageRuleGroupRuleOutput) WatchFileRenameChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchFileRenameChanges }).(pulumi.BoolPtrOutput)
}

// Monitor file write events.
func (o FilevantageRuleGroupRuleOutput) WatchFileWriteChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchFileWriteChanges }).(pulumi.BoolPtrOutput)
}

// Monitor registry key creation events.
func (o FilevantageRuleGroupRuleOutput) WatchKeyCreateChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchKeyCreateChanges }).(pulumi.BoolPtrOutput)
}

// Monitor registry key deletion events.
func (o FilevantageRuleGroupRuleOutput) WatchKeyDeleteChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchKeyDeleteChanges }).(pulumi.BoolPtrOutput)
}

// Monitor registry key permission change events.
func (o FilevantageRuleGroupRuleOutput) WatchKeyPermissionsChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchKeyPermissionsChanges }).(pulumi.BoolPtrOutput)
}

// Monitor registry key rename events.
func (o FilevantageRuleGroupRuleOutput) WatchKeyRenameChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchKeyRenameChanges }).(pulumi.BoolPtrOutput)
}

// Monitor registry value deletion events.
func (o FilevantageRuleGroupRuleOutput) WatchKeyValueDeleteChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchKeyValueDeleteChanges }).(pulumi.BoolPtrOutput)
}

// Monitor registry value set events.
func (o FilevantageRuleGroupRuleOutput) WatchKeyValueSetChanges() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FilevantageRuleGroupRule) *bool { return v.WatchKeyValueSetChanges }).(pulumi.BoolPtrOutput)
}

type FilevantageRuleGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (FilevantageRuleGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilevantageRuleGroupRule)(nil)).Elem()
}

func (o FilevantageRuleGroupRuleArrayOutput) ToFilevantageRuleGroupRuleArrayOutput() FilevantageRuleGroupRuleArrayOutput {
	return o
}

func (o FilevantageRuleGroupRuleArrayOutput) ToFilevantageRuleGroupRuleArrayOutputWithContext(ctx context.Context) FilevantageRuleGroupRuleArrayOutput {
	return o
}

func (o FilevantageRuleGroupRuleArrayOutput) Index(i pulumi.IntInput) FilevantageRuleGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilevantageRuleGroupRule {
		return vs[0].([]FilevantageRuleGroupRule)[vs[1].(int)]
	}).(FilevantageRuleGroupRuleOutput)
}

type PreventionPolicyLinuxCloudAntiMalware struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyLinuxCloudAntiMalwareInput is an input type that accepts PreventionPolicyLinuxCloudAntiMalwareArgs and PreventionPolicyLinuxCloudAntiMalwareOutput values.
// You can construct a concrete instance of `PreventionPolicyLinuxCloudAntiMalwareInput` via:
//
//	PreventionPolicyLinuxCloudAntiMalwareArgs{...}
type PreventionPolicyLinuxCloudAntiMalwareInput interface {
	pulumi.Input

	ToPreventionPolicyLinuxCloudAntiMalwareOutput() PreventionPolicyLinuxCloudAntiMalwareOutput
	ToPreventionPolicyLinuxCloudAntiMalwareOutputWithContext(context.Context) PreventionPolicyLinuxCloudAntiMalwareOutput
}

type PreventionPolicyLinuxCloudAntiMalwareArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyLinuxCloudAntiMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyLinuxCloudAntiMalware)(nil)).Elem()
}

func (i PreventionPolicyLinuxCloudAntiMalwareArgs) ToPreventionPolicyLinuxCloudAntiMalwareOutput() PreventionPolicyLinuxCloudAntiMalwareOutput {
	return i.ToPreventionPolicyLinuxCloudAntiMalwareOutputWithContext(context.Background())
}

func (i PreventionPolicyLinuxCloudAntiMalwareArgs) ToPreventionPolicyLinuxCloudAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyLinuxCloudAntiMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyLinuxCloudAntiMalwareOutput)
}

func (i PreventionPolicyLinuxCloudAntiMalwareArgs) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutput() PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return i.ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (i PreventionPolicyLinuxCloudAntiMalwareArgs) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyLinuxCloudAntiMalwareOutput).ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(ctx)
}

// PreventionPolicyLinuxCloudAntiMalwarePtrInput is an input type that accepts PreventionPolicyLinuxCloudAntiMalwareArgs, PreventionPolicyLinuxCloudAntiMalwarePtr and PreventionPolicyLinuxCloudAntiMalwarePtrOutput values.
// You can construct a concrete instance of `PreventionPolicyLinuxCloudAntiMalwarePtrInput` via:
//
//	        PreventionPolicyLinuxCloudAntiMalwareArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyLinuxCloudAntiMalwarePtrInput interface {
	pulumi.Input

	ToPreventionPolicyLinuxCloudAntiMalwarePtrOutput() PreventionPolicyLinuxCloudAntiMalwarePtrOutput
	ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(context.Context) PreventionPolicyLinuxCloudAntiMalwarePtrOutput
}

type preventionPolicyLinuxCloudAntiMalwarePtrType PreventionPolicyLinuxCloudAntiMalwareArgs

func PreventionPolicyLinuxCloudAntiMalwarePtr(v *PreventionPolicyLinuxCloudAntiMalwareArgs) PreventionPolicyLinuxCloudAntiMalwarePtrInput {
	return (*preventionPolicyLinuxCloudAntiMalwarePtrType)(v)
}

func (*preventionPolicyLinuxCloudAntiMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyLinuxCloudAntiMalware)(nil)).Elem()
}

func (i *preventionPolicyLinuxCloudAntiMalwarePtrType) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutput() PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return i.ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (i *preventionPolicyLinuxCloudAntiMalwarePtrType) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyLinuxCloudAntiMalwarePtrOutput)
}

type PreventionPolicyLinuxCloudAntiMalwareOutput struct{ *pulumi.OutputState }

func (PreventionPolicyLinuxCloudAntiMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyLinuxCloudAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyLinuxCloudAntiMalwareOutput) ToPreventionPolicyLinuxCloudAntiMalwareOutput() PreventionPolicyLinuxCloudAntiMalwareOutput {
	return o
}

func (o PreventionPolicyLinuxCloudAntiMalwareOutput) ToPreventionPolicyLinuxCloudAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyLinuxCloudAntiMalwareOutput {
	return o
}

func (o PreventionPolicyLinuxCloudAntiMalwareOutput) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutput() PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return o.ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (o PreventionPolicyLinuxCloudAntiMalwareOutput) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyLinuxCloudAntiMalware) *PreventionPolicyLinuxCloudAntiMalware {
		return &v
	}).(PreventionPolicyLinuxCloudAntiMalwarePtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyLinuxCloudAntiMalwareOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyLinuxCloudAntiMalware) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyLinuxCloudAntiMalwareOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyLinuxCloudAntiMalware) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyLinuxCloudAntiMalwarePtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyLinuxCloudAntiMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyLinuxCloudAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyLinuxCloudAntiMalwarePtrOutput) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutput() PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyLinuxCloudAntiMalwarePtrOutput) ToPreventionPolicyLinuxCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxCloudAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyLinuxCloudAntiMalwarePtrOutput) Elem() PreventionPolicyLinuxCloudAntiMalwareOutput {
	return o.ApplyT(func(v *PreventionPolicyLinuxCloudAntiMalware) PreventionPolicyLinuxCloudAntiMalware {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyLinuxCloudAntiMalware
		return ret
	}).(PreventionPolicyLinuxCloudAntiMalwareOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyLinuxCloudAntiMalwarePtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyLinuxCloudAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyLinuxCloudAntiMalwarePtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyLinuxCloudAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyLinuxSensorAntiMalware struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyLinuxSensorAntiMalwareInput is an input type that accepts PreventionPolicyLinuxSensorAntiMalwareArgs and PreventionPolicyLinuxSensorAntiMalwareOutput values.
// You can construct a concrete instance of `PreventionPolicyLinuxSensorAntiMalwareInput` via:
//
//	PreventionPolicyLinuxSensorAntiMalwareArgs{...}
type PreventionPolicyLinuxSensorAntiMalwareInput interface {
	pulumi.Input

	ToPreventionPolicyLinuxSensorAntiMalwareOutput() PreventionPolicyLinuxSensorAntiMalwareOutput
	ToPreventionPolicyLinuxSensorAntiMalwareOutputWithContext(context.Context) PreventionPolicyLinuxSensorAntiMalwareOutput
}

type PreventionPolicyLinuxSensorAntiMalwareArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyLinuxSensorAntiMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyLinuxSensorAntiMalware)(nil)).Elem()
}

func (i PreventionPolicyLinuxSensorAntiMalwareArgs) ToPreventionPolicyLinuxSensorAntiMalwareOutput() PreventionPolicyLinuxSensorAntiMalwareOutput {
	return i.ToPreventionPolicyLinuxSensorAntiMalwareOutputWithContext(context.Background())
}

func (i PreventionPolicyLinuxSensorAntiMalwareArgs) ToPreventionPolicyLinuxSensorAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyLinuxSensorAntiMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyLinuxSensorAntiMalwareOutput)
}

func (i PreventionPolicyLinuxSensorAntiMalwareArgs) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutput() PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return i.ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (i PreventionPolicyLinuxSensorAntiMalwareArgs) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyLinuxSensorAntiMalwareOutput).ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(ctx)
}

// PreventionPolicyLinuxSensorAntiMalwarePtrInput is an input type that accepts PreventionPolicyLinuxSensorAntiMalwareArgs, PreventionPolicyLinuxSensorAntiMalwarePtr and PreventionPolicyLinuxSensorAntiMalwarePtrOutput values.
// You can construct a concrete instance of `PreventionPolicyLinuxSensorAntiMalwarePtrInput` via:
//
//	        PreventionPolicyLinuxSensorAntiMalwareArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyLinuxSensorAntiMalwarePtrInput interface {
	pulumi.Input

	ToPreventionPolicyLinuxSensorAntiMalwarePtrOutput() PreventionPolicyLinuxSensorAntiMalwarePtrOutput
	ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(context.Context) PreventionPolicyLinuxSensorAntiMalwarePtrOutput
}

type preventionPolicyLinuxSensorAntiMalwarePtrType PreventionPolicyLinuxSensorAntiMalwareArgs

func PreventionPolicyLinuxSensorAntiMalwarePtr(v *PreventionPolicyLinuxSensorAntiMalwareArgs) PreventionPolicyLinuxSensorAntiMalwarePtrInput {
	return (*preventionPolicyLinuxSensorAntiMalwarePtrType)(v)
}

func (*preventionPolicyLinuxSensorAntiMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyLinuxSensorAntiMalware)(nil)).Elem()
}

func (i *preventionPolicyLinuxSensorAntiMalwarePtrType) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutput() PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return i.ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (i *preventionPolicyLinuxSensorAntiMalwarePtrType) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyLinuxSensorAntiMalwarePtrOutput)
}

type PreventionPolicyLinuxSensorAntiMalwareOutput struct{ *pulumi.OutputState }

func (PreventionPolicyLinuxSensorAntiMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyLinuxSensorAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyLinuxSensorAntiMalwareOutput) ToPreventionPolicyLinuxSensorAntiMalwareOutput() PreventionPolicyLinuxSensorAntiMalwareOutput {
	return o
}

func (o PreventionPolicyLinuxSensorAntiMalwareOutput) ToPreventionPolicyLinuxSensorAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyLinuxSensorAntiMalwareOutput {
	return o
}

func (o PreventionPolicyLinuxSensorAntiMalwareOutput) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutput() PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return o.ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (o PreventionPolicyLinuxSensorAntiMalwareOutput) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyLinuxSensorAntiMalware) *PreventionPolicyLinuxSensorAntiMalware {
		return &v
	}).(PreventionPolicyLinuxSensorAntiMalwarePtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyLinuxSensorAntiMalwareOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyLinuxSensorAntiMalware) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyLinuxSensorAntiMalwareOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyLinuxSensorAntiMalware) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyLinuxSensorAntiMalwarePtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyLinuxSensorAntiMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyLinuxSensorAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyLinuxSensorAntiMalwarePtrOutput) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutput() PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyLinuxSensorAntiMalwarePtrOutput) ToPreventionPolicyLinuxSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyLinuxSensorAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyLinuxSensorAntiMalwarePtrOutput) Elem() PreventionPolicyLinuxSensorAntiMalwareOutput {
	return o.ApplyT(func(v *PreventionPolicyLinuxSensorAntiMalware) PreventionPolicyLinuxSensorAntiMalware {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyLinuxSensorAntiMalware
		return ret
	}).(PreventionPolicyLinuxSensorAntiMalwareOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyLinuxSensorAntiMalwarePtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyLinuxSensorAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyLinuxSensorAntiMalwarePtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyLinuxSensorAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyMacCloudAdwareAndPup struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyMacCloudAdwareAndPupInput is an input type that accepts PreventionPolicyMacCloudAdwareAndPupArgs and PreventionPolicyMacCloudAdwareAndPupOutput values.
// You can construct a concrete instance of `PreventionPolicyMacCloudAdwareAndPupInput` via:
//
//	PreventionPolicyMacCloudAdwareAndPupArgs{...}
type PreventionPolicyMacCloudAdwareAndPupInput interface {
	pulumi.Input

	ToPreventionPolicyMacCloudAdwareAndPupOutput() PreventionPolicyMacCloudAdwareAndPupOutput
	ToPreventionPolicyMacCloudAdwareAndPupOutputWithContext(context.Context) PreventionPolicyMacCloudAdwareAndPupOutput
}

type PreventionPolicyMacCloudAdwareAndPupArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyMacCloudAdwareAndPupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacCloudAdwareAndPup)(nil)).Elem()
}

func (i PreventionPolicyMacCloudAdwareAndPupArgs) ToPreventionPolicyMacCloudAdwareAndPupOutput() PreventionPolicyMacCloudAdwareAndPupOutput {
	return i.ToPreventionPolicyMacCloudAdwareAndPupOutputWithContext(context.Background())
}

func (i PreventionPolicyMacCloudAdwareAndPupArgs) ToPreventionPolicyMacCloudAdwareAndPupOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAdwareAndPupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacCloudAdwareAndPupOutput)
}

func (i PreventionPolicyMacCloudAdwareAndPupArgs) ToPreventionPolicyMacCloudAdwareAndPupPtrOutput() PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return i.ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyMacCloudAdwareAndPupArgs) ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacCloudAdwareAndPupOutput).ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(ctx)
}

// PreventionPolicyMacCloudAdwareAndPupPtrInput is an input type that accepts PreventionPolicyMacCloudAdwareAndPupArgs, PreventionPolicyMacCloudAdwareAndPupPtr and PreventionPolicyMacCloudAdwareAndPupPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyMacCloudAdwareAndPupPtrInput` via:
//
//	        PreventionPolicyMacCloudAdwareAndPupArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyMacCloudAdwareAndPupPtrInput interface {
	pulumi.Input

	ToPreventionPolicyMacCloudAdwareAndPupPtrOutput() PreventionPolicyMacCloudAdwareAndPupPtrOutput
	ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(context.Context) PreventionPolicyMacCloudAdwareAndPupPtrOutput
}

type preventionPolicyMacCloudAdwareAndPupPtrType PreventionPolicyMacCloudAdwareAndPupArgs

func PreventionPolicyMacCloudAdwareAndPupPtr(v *PreventionPolicyMacCloudAdwareAndPupArgs) PreventionPolicyMacCloudAdwareAndPupPtrInput {
	return (*preventionPolicyMacCloudAdwareAndPupPtrType)(v)
}

func (*preventionPolicyMacCloudAdwareAndPupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacCloudAdwareAndPup)(nil)).Elem()
}

func (i *preventionPolicyMacCloudAdwareAndPupPtrType) ToPreventionPolicyMacCloudAdwareAndPupPtrOutput() PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return i.ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyMacCloudAdwareAndPupPtrType) ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacCloudAdwareAndPupPtrOutput)
}

type PreventionPolicyMacCloudAdwareAndPupOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacCloudAdwareAndPupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacCloudAdwareAndPup)(nil)).Elem()
}

func (o PreventionPolicyMacCloudAdwareAndPupOutput) ToPreventionPolicyMacCloudAdwareAndPupOutput() PreventionPolicyMacCloudAdwareAndPupOutput {
	return o
}

func (o PreventionPolicyMacCloudAdwareAndPupOutput) ToPreventionPolicyMacCloudAdwareAndPupOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAdwareAndPupOutput {
	return o
}

func (o PreventionPolicyMacCloudAdwareAndPupOutput) ToPreventionPolicyMacCloudAdwareAndPupPtrOutput() PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return o.ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyMacCloudAdwareAndPupOutput) ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyMacCloudAdwareAndPup) *PreventionPolicyMacCloudAdwareAndPup {
		return &v
	}).(PreventionPolicyMacCloudAdwareAndPupPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacCloudAdwareAndPupOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacCloudAdwareAndPup) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacCloudAdwareAndPupOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacCloudAdwareAndPup) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyMacCloudAdwareAndPupPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacCloudAdwareAndPupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacCloudAdwareAndPup)(nil)).Elem()
}

func (o PreventionPolicyMacCloudAdwareAndPupPtrOutput) ToPreventionPolicyMacCloudAdwareAndPupPtrOutput() PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return o
}

func (o PreventionPolicyMacCloudAdwareAndPupPtrOutput) ToPreventionPolicyMacCloudAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAdwareAndPupPtrOutput {
	return o
}

func (o PreventionPolicyMacCloudAdwareAndPupPtrOutput) Elem() PreventionPolicyMacCloudAdwareAndPupOutput {
	return o.ApplyT(func(v *PreventionPolicyMacCloudAdwareAndPup) PreventionPolicyMacCloudAdwareAndPup {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyMacCloudAdwareAndPup
		return ret
	}).(PreventionPolicyMacCloudAdwareAndPupOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacCloudAdwareAndPupPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacCloudAdwareAndPup) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacCloudAdwareAndPupPtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacCloudAdwareAndPup) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyMacCloudAntiMalware struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyMacCloudAntiMalwareInput is an input type that accepts PreventionPolicyMacCloudAntiMalwareArgs and PreventionPolicyMacCloudAntiMalwareOutput values.
// You can construct a concrete instance of `PreventionPolicyMacCloudAntiMalwareInput` via:
//
//	PreventionPolicyMacCloudAntiMalwareArgs{...}
type PreventionPolicyMacCloudAntiMalwareInput interface {
	pulumi.Input

	ToPreventionPolicyMacCloudAntiMalwareOutput() PreventionPolicyMacCloudAntiMalwareOutput
	ToPreventionPolicyMacCloudAntiMalwareOutputWithContext(context.Context) PreventionPolicyMacCloudAntiMalwareOutput
}

type PreventionPolicyMacCloudAntiMalwareArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyMacCloudAntiMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacCloudAntiMalware)(nil)).Elem()
}

func (i PreventionPolicyMacCloudAntiMalwareArgs) ToPreventionPolicyMacCloudAntiMalwareOutput() PreventionPolicyMacCloudAntiMalwareOutput {
	return i.ToPreventionPolicyMacCloudAntiMalwareOutputWithContext(context.Background())
}

func (i PreventionPolicyMacCloudAntiMalwareArgs) ToPreventionPolicyMacCloudAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAntiMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacCloudAntiMalwareOutput)
}

func (i PreventionPolicyMacCloudAntiMalwareArgs) ToPreventionPolicyMacCloudAntiMalwarePtrOutput() PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return i.ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (i PreventionPolicyMacCloudAntiMalwareArgs) ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacCloudAntiMalwareOutput).ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(ctx)
}

// PreventionPolicyMacCloudAntiMalwarePtrInput is an input type that accepts PreventionPolicyMacCloudAntiMalwareArgs, PreventionPolicyMacCloudAntiMalwarePtr and PreventionPolicyMacCloudAntiMalwarePtrOutput values.
// You can construct a concrete instance of `PreventionPolicyMacCloudAntiMalwarePtrInput` via:
//
//	        PreventionPolicyMacCloudAntiMalwareArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyMacCloudAntiMalwarePtrInput interface {
	pulumi.Input

	ToPreventionPolicyMacCloudAntiMalwarePtrOutput() PreventionPolicyMacCloudAntiMalwarePtrOutput
	ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(context.Context) PreventionPolicyMacCloudAntiMalwarePtrOutput
}

type preventionPolicyMacCloudAntiMalwarePtrType PreventionPolicyMacCloudAntiMalwareArgs

func PreventionPolicyMacCloudAntiMalwarePtr(v *PreventionPolicyMacCloudAntiMalwareArgs) PreventionPolicyMacCloudAntiMalwarePtrInput {
	return (*preventionPolicyMacCloudAntiMalwarePtrType)(v)
}

func (*preventionPolicyMacCloudAntiMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacCloudAntiMalware)(nil)).Elem()
}

func (i *preventionPolicyMacCloudAntiMalwarePtrType) ToPreventionPolicyMacCloudAntiMalwarePtrOutput() PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return i.ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (i *preventionPolicyMacCloudAntiMalwarePtrType) ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacCloudAntiMalwarePtrOutput)
}

type PreventionPolicyMacCloudAntiMalwareOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacCloudAntiMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacCloudAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyMacCloudAntiMalwareOutput) ToPreventionPolicyMacCloudAntiMalwareOutput() PreventionPolicyMacCloudAntiMalwareOutput {
	return o
}

func (o PreventionPolicyMacCloudAntiMalwareOutput) ToPreventionPolicyMacCloudAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAntiMalwareOutput {
	return o
}

func (o PreventionPolicyMacCloudAntiMalwareOutput) ToPreventionPolicyMacCloudAntiMalwarePtrOutput() PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return o.ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (o PreventionPolicyMacCloudAntiMalwareOutput) ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyMacCloudAntiMalware) *PreventionPolicyMacCloudAntiMalware {
		return &v
	}).(PreventionPolicyMacCloudAntiMalwarePtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacCloudAntiMalwareOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacCloudAntiMalware) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacCloudAntiMalwareOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacCloudAntiMalware) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyMacCloudAntiMalwarePtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacCloudAntiMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacCloudAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyMacCloudAntiMalwarePtrOutput) ToPreventionPolicyMacCloudAntiMalwarePtrOutput() PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyMacCloudAntiMalwarePtrOutput) ToPreventionPolicyMacCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacCloudAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyMacCloudAntiMalwarePtrOutput) Elem() PreventionPolicyMacCloudAntiMalwareOutput {
	return o.ApplyT(func(v *PreventionPolicyMacCloudAntiMalware) PreventionPolicyMacCloudAntiMalware {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyMacCloudAntiMalware
		return ret
	}).(PreventionPolicyMacCloudAntiMalwareOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacCloudAntiMalwarePtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacCloudAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacCloudAntiMalwarePtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacCloudAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyMacSensorAdwareAndPup struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyMacSensorAdwareAndPupInput is an input type that accepts PreventionPolicyMacSensorAdwareAndPupArgs and PreventionPolicyMacSensorAdwareAndPupOutput values.
// You can construct a concrete instance of `PreventionPolicyMacSensorAdwareAndPupInput` via:
//
//	PreventionPolicyMacSensorAdwareAndPupArgs{...}
type PreventionPolicyMacSensorAdwareAndPupInput interface {
	pulumi.Input

	ToPreventionPolicyMacSensorAdwareAndPupOutput() PreventionPolicyMacSensorAdwareAndPupOutput
	ToPreventionPolicyMacSensorAdwareAndPupOutputWithContext(context.Context) PreventionPolicyMacSensorAdwareAndPupOutput
}

type PreventionPolicyMacSensorAdwareAndPupArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyMacSensorAdwareAndPupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacSensorAdwareAndPup)(nil)).Elem()
}

func (i PreventionPolicyMacSensorAdwareAndPupArgs) ToPreventionPolicyMacSensorAdwareAndPupOutput() PreventionPolicyMacSensorAdwareAndPupOutput {
	return i.ToPreventionPolicyMacSensorAdwareAndPupOutputWithContext(context.Background())
}

func (i PreventionPolicyMacSensorAdwareAndPupArgs) ToPreventionPolicyMacSensorAdwareAndPupOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAdwareAndPupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacSensorAdwareAndPupOutput)
}

func (i PreventionPolicyMacSensorAdwareAndPupArgs) ToPreventionPolicyMacSensorAdwareAndPupPtrOutput() PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return i.ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyMacSensorAdwareAndPupArgs) ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacSensorAdwareAndPupOutput).ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(ctx)
}

// PreventionPolicyMacSensorAdwareAndPupPtrInput is an input type that accepts PreventionPolicyMacSensorAdwareAndPupArgs, PreventionPolicyMacSensorAdwareAndPupPtr and PreventionPolicyMacSensorAdwareAndPupPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyMacSensorAdwareAndPupPtrInput` via:
//
//	        PreventionPolicyMacSensorAdwareAndPupArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyMacSensorAdwareAndPupPtrInput interface {
	pulumi.Input

	ToPreventionPolicyMacSensorAdwareAndPupPtrOutput() PreventionPolicyMacSensorAdwareAndPupPtrOutput
	ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(context.Context) PreventionPolicyMacSensorAdwareAndPupPtrOutput
}

type preventionPolicyMacSensorAdwareAndPupPtrType PreventionPolicyMacSensorAdwareAndPupArgs

func PreventionPolicyMacSensorAdwareAndPupPtr(v *PreventionPolicyMacSensorAdwareAndPupArgs) PreventionPolicyMacSensorAdwareAndPupPtrInput {
	return (*preventionPolicyMacSensorAdwareAndPupPtrType)(v)
}

func (*preventionPolicyMacSensorAdwareAndPupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacSensorAdwareAndPup)(nil)).Elem()
}

func (i *preventionPolicyMacSensorAdwareAndPupPtrType) ToPreventionPolicyMacSensorAdwareAndPupPtrOutput() PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return i.ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyMacSensorAdwareAndPupPtrType) ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacSensorAdwareAndPupPtrOutput)
}

type PreventionPolicyMacSensorAdwareAndPupOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacSensorAdwareAndPupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacSensorAdwareAndPup)(nil)).Elem()
}

func (o PreventionPolicyMacSensorAdwareAndPupOutput) ToPreventionPolicyMacSensorAdwareAndPupOutput() PreventionPolicyMacSensorAdwareAndPupOutput {
	return o
}

func (o PreventionPolicyMacSensorAdwareAndPupOutput) ToPreventionPolicyMacSensorAdwareAndPupOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAdwareAndPupOutput {
	return o
}

func (o PreventionPolicyMacSensorAdwareAndPupOutput) ToPreventionPolicyMacSensorAdwareAndPupPtrOutput() PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return o.ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyMacSensorAdwareAndPupOutput) ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyMacSensorAdwareAndPup) *PreventionPolicyMacSensorAdwareAndPup {
		return &v
	}).(PreventionPolicyMacSensorAdwareAndPupPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacSensorAdwareAndPupOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacSensorAdwareAndPup) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacSensorAdwareAndPupOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacSensorAdwareAndPup) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyMacSensorAdwareAndPupPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacSensorAdwareAndPupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacSensorAdwareAndPup)(nil)).Elem()
}

func (o PreventionPolicyMacSensorAdwareAndPupPtrOutput) ToPreventionPolicyMacSensorAdwareAndPupPtrOutput() PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return o
}

func (o PreventionPolicyMacSensorAdwareAndPupPtrOutput) ToPreventionPolicyMacSensorAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAdwareAndPupPtrOutput {
	return o
}

func (o PreventionPolicyMacSensorAdwareAndPupPtrOutput) Elem() PreventionPolicyMacSensorAdwareAndPupOutput {
	return o.ApplyT(func(v *PreventionPolicyMacSensorAdwareAndPup) PreventionPolicyMacSensorAdwareAndPup {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyMacSensorAdwareAndPup
		return ret
	}).(PreventionPolicyMacSensorAdwareAndPupOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacSensorAdwareAndPupPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacSensorAdwareAndPup) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacSensorAdwareAndPupPtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacSensorAdwareAndPup) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyMacSensorAntiMalware struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyMacSensorAntiMalwareInput is an input type that accepts PreventionPolicyMacSensorAntiMalwareArgs and PreventionPolicyMacSensorAntiMalwareOutput values.
// You can construct a concrete instance of `PreventionPolicyMacSensorAntiMalwareInput` via:
//
//	PreventionPolicyMacSensorAntiMalwareArgs{...}
type PreventionPolicyMacSensorAntiMalwareInput interface {
	pulumi.Input

	ToPreventionPolicyMacSensorAntiMalwareOutput() PreventionPolicyMacSensorAntiMalwareOutput
	ToPreventionPolicyMacSensorAntiMalwareOutputWithContext(context.Context) PreventionPolicyMacSensorAntiMalwareOutput
}

type PreventionPolicyMacSensorAntiMalwareArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyMacSensorAntiMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacSensorAntiMalware)(nil)).Elem()
}

func (i PreventionPolicyMacSensorAntiMalwareArgs) ToPreventionPolicyMacSensorAntiMalwareOutput() PreventionPolicyMacSensorAntiMalwareOutput {
	return i.ToPreventionPolicyMacSensorAntiMalwareOutputWithContext(context.Background())
}

func (i PreventionPolicyMacSensorAntiMalwareArgs) ToPreventionPolicyMacSensorAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAntiMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacSensorAntiMalwareOutput)
}

func (i PreventionPolicyMacSensorAntiMalwareArgs) ToPreventionPolicyMacSensorAntiMalwarePtrOutput() PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return i.ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (i PreventionPolicyMacSensorAntiMalwareArgs) ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacSensorAntiMalwareOutput).ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(ctx)
}

// PreventionPolicyMacSensorAntiMalwarePtrInput is an input type that accepts PreventionPolicyMacSensorAntiMalwareArgs, PreventionPolicyMacSensorAntiMalwarePtr and PreventionPolicyMacSensorAntiMalwarePtrOutput values.
// You can construct a concrete instance of `PreventionPolicyMacSensorAntiMalwarePtrInput` via:
//
//	        PreventionPolicyMacSensorAntiMalwareArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyMacSensorAntiMalwarePtrInput interface {
	pulumi.Input

	ToPreventionPolicyMacSensorAntiMalwarePtrOutput() PreventionPolicyMacSensorAntiMalwarePtrOutput
	ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(context.Context) PreventionPolicyMacSensorAntiMalwarePtrOutput
}

type preventionPolicyMacSensorAntiMalwarePtrType PreventionPolicyMacSensorAntiMalwareArgs

func PreventionPolicyMacSensorAntiMalwarePtr(v *PreventionPolicyMacSensorAntiMalwareArgs) PreventionPolicyMacSensorAntiMalwarePtrInput {
	return (*preventionPolicyMacSensorAntiMalwarePtrType)(v)
}

func (*preventionPolicyMacSensorAntiMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacSensorAntiMalware)(nil)).Elem()
}

func (i *preventionPolicyMacSensorAntiMalwarePtrType) ToPreventionPolicyMacSensorAntiMalwarePtrOutput() PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return i.ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (i *preventionPolicyMacSensorAntiMalwarePtrType) ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyMacSensorAntiMalwarePtrOutput)
}

type PreventionPolicyMacSensorAntiMalwareOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacSensorAntiMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyMacSensorAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyMacSensorAntiMalwareOutput) ToPreventionPolicyMacSensorAntiMalwareOutput() PreventionPolicyMacSensorAntiMalwareOutput {
	return o
}

func (o PreventionPolicyMacSensorAntiMalwareOutput) ToPreventionPolicyMacSensorAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAntiMalwareOutput {
	return o
}

func (o PreventionPolicyMacSensorAntiMalwareOutput) ToPreventionPolicyMacSensorAntiMalwarePtrOutput() PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return o.ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (o PreventionPolicyMacSensorAntiMalwareOutput) ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyMacSensorAntiMalware) *PreventionPolicyMacSensorAntiMalware {
		return &v
	}).(PreventionPolicyMacSensorAntiMalwarePtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacSensorAntiMalwareOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacSensorAntiMalware) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacSensorAntiMalwareOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyMacSensorAntiMalware) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyMacSensorAntiMalwarePtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyMacSensorAntiMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyMacSensorAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyMacSensorAntiMalwarePtrOutput) ToPreventionPolicyMacSensorAntiMalwarePtrOutput() PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyMacSensorAntiMalwarePtrOutput) ToPreventionPolicyMacSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyMacSensorAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyMacSensorAntiMalwarePtrOutput) Elem() PreventionPolicyMacSensorAntiMalwareOutput {
	return o.ApplyT(func(v *PreventionPolicyMacSensorAntiMalware) PreventionPolicyMacSensorAntiMalware {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyMacSensorAntiMalware
		return ret
	}).(PreventionPolicyMacSensorAntiMalwareOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyMacSensorAntiMalwarePtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacSensorAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyMacSensorAntiMalwarePtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyMacSensorAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsAdwareAndPup struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyWindowsAdwareAndPupInput is an input type that accepts PreventionPolicyWindowsAdwareAndPupArgs and PreventionPolicyWindowsAdwareAndPupOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsAdwareAndPupInput` via:
//
//	PreventionPolicyWindowsAdwareAndPupArgs{...}
type PreventionPolicyWindowsAdwareAndPupInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsAdwareAndPupOutput() PreventionPolicyWindowsAdwareAndPupOutput
	ToPreventionPolicyWindowsAdwareAndPupOutputWithContext(context.Context) PreventionPolicyWindowsAdwareAndPupOutput
}

type PreventionPolicyWindowsAdwareAndPupArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyWindowsAdwareAndPupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsAdwareAndPup)(nil)).Elem()
}

func (i PreventionPolicyWindowsAdwareAndPupArgs) ToPreventionPolicyWindowsAdwareAndPupOutput() PreventionPolicyWindowsAdwareAndPupOutput {
	return i.ToPreventionPolicyWindowsAdwareAndPupOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsAdwareAndPupArgs) ToPreventionPolicyWindowsAdwareAndPupOutputWithContext(ctx context.Context) PreventionPolicyWindowsAdwareAndPupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsAdwareAndPupOutput)
}

func (i PreventionPolicyWindowsAdwareAndPupArgs) ToPreventionPolicyWindowsAdwareAndPupPtrOutput() PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return i.ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsAdwareAndPupArgs) ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsAdwareAndPupOutput).ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsAdwareAndPupPtrInput is an input type that accepts PreventionPolicyWindowsAdwareAndPupArgs, PreventionPolicyWindowsAdwareAndPupPtr and PreventionPolicyWindowsAdwareAndPupPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsAdwareAndPupPtrInput` via:
//
//	        PreventionPolicyWindowsAdwareAndPupArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsAdwareAndPupPtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsAdwareAndPupPtrOutput() PreventionPolicyWindowsAdwareAndPupPtrOutput
	ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(context.Context) PreventionPolicyWindowsAdwareAndPupPtrOutput
}

type preventionPolicyWindowsAdwareAndPupPtrType PreventionPolicyWindowsAdwareAndPupArgs

func PreventionPolicyWindowsAdwareAndPupPtr(v *PreventionPolicyWindowsAdwareAndPupArgs) PreventionPolicyWindowsAdwareAndPupPtrInput {
	return (*preventionPolicyWindowsAdwareAndPupPtrType)(v)
}

func (*preventionPolicyWindowsAdwareAndPupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsAdwareAndPup)(nil)).Elem()
}

func (i *preventionPolicyWindowsAdwareAndPupPtrType) ToPreventionPolicyWindowsAdwareAndPupPtrOutput() PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return i.ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsAdwareAndPupPtrType) ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsAdwareAndPupPtrOutput)
}

type PreventionPolicyWindowsAdwareAndPupOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsAdwareAndPupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsAdwareAndPup)(nil)).Elem()
}

func (o PreventionPolicyWindowsAdwareAndPupOutput) ToPreventionPolicyWindowsAdwareAndPupOutput() PreventionPolicyWindowsAdwareAndPupOutput {
	return o
}

func (o PreventionPolicyWindowsAdwareAndPupOutput) ToPreventionPolicyWindowsAdwareAndPupOutputWithContext(ctx context.Context) PreventionPolicyWindowsAdwareAndPupOutput {
	return o
}

func (o PreventionPolicyWindowsAdwareAndPupOutput) ToPreventionPolicyWindowsAdwareAndPupPtrOutput() PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return o.ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsAdwareAndPupOutput) ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsAdwareAndPup) *PreventionPolicyWindowsAdwareAndPup {
		return &v
	}).(PreventionPolicyWindowsAdwareAndPupPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsAdwareAndPupOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsAdwareAndPup) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsAdwareAndPupOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsAdwareAndPup) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsAdwareAndPupPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsAdwareAndPupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsAdwareAndPup)(nil)).Elem()
}

func (o PreventionPolicyWindowsAdwareAndPupPtrOutput) ToPreventionPolicyWindowsAdwareAndPupPtrOutput() PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return o
}

func (o PreventionPolicyWindowsAdwareAndPupPtrOutput) ToPreventionPolicyWindowsAdwareAndPupPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsAdwareAndPupPtrOutput {
	return o
}

func (o PreventionPolicyWindowsAdwareAndPupPtrOutput) Elem() PreventionPolicyWindowsAdwareAndPupOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsAdwareAndPup) PreventionPolicyWindowsAdwareAndPup {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsAdwareAndPup
		return ret
	}).(PreventionPolicyWindowsAdwareAndPupOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsAdwareAndPupPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsAdwareAndPup) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsAdwareAndPupPtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsAdwareAndPup) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsCloudAntiMalware struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyWindowsCloudAntiMalwareInput is an input type that accepts PreventionPolicyWindowsCloudAntiMalwareArgs and PreventionPolicyWindowsCloudAntiMalwareOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsCloudAntiMalwareInput` via:
//
//	PreventionPolicyWindowsCloudAntiMalwareArgs{...}
type PreventionPolicyWindowsCloudAntiMalwareInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsCloudAntiMalwareOutput() PreventionPolicyWindowsCloudAntiMalwareOutput
	ToPreventionPolicyWindowsCloudAntiMalwareOutputWithContext(context.Context) PreventionPolicyWindowsCloudAntiMalwareOutput
}

type PreventionPolicyWindowsCloudAntiMalwareArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyWindowsCloudAntiMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalware)(nil)).Elem()
}

func (i PreventionPolicyWindowsCloudAntiMalwareArgs) ToPreventionPolicyWindowsCloudAntiMalwareOutput() PreventionPolicyWindowsCloudAntiMalwareOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsCloudAntiMalwareArgs) ToPreventionPolicyWindowsCloudAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareOutput)
}

func (i PreventionPolicyWindowsCloudAntiMalwareArgs) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutput() PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsCloudAntiMalwareArgs) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareOutput).ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsCloudAntiMalwarePtrInput is an input type that accepts PreventionPolicyWindowsCloudAntiMalwareArgs, PreventionPolicyWindowsCloudAntiMalwarePtr and PreventionPolicyWindowsCloudAntiMalwarePtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsCloudAntiMalwarePtrInput` via:
//
//	        PreventionPolicyWindowsCloudAntiMalwareArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsCloudAntiMalwarePtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsCloudAntiMalwarePtrOutput() PreventionPolicyWindowsCloudAntiMalwarePtrOutput
	ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(context.Context) PreventionPolicyWindowsCloudAntiMalwarePtrOutput
}

type preventionPolicyWindowsCloudAntiMalwarePtrType PreventionPolicyWindowsCloudAntiMalwareArgs

func PreventionPolicyWindowsCloudAntiMalwarePtr(v *PreventionPolicyWindowsCloudAntiMalwareArgs) PreventionPolicyWindowsCloudAntiMalwarePtrInput {
	return (*preventionPolicyWindowsCloudAntiMalwarePtrType)(v)
}

func (*preventionPolicyWindowsCloudAntiMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsCloudAntiMalware)(nil)).Elem()
}

func (i *preventionPolicyWindowsCloudAntiMalwarePtrType) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutput() PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsCloudAntiMalwarePtrType) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwarePtrOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsCloudAntiMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyWindowsCloudAntiMalwareOutput) ToPreventionPolicyWindowsCloudAntiMalwareOutput() PreventionPolicyWindowsCloudAntiMalwareOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareOutput) ToPreventionPolicyWindowsCloudAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareOutput) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutput() PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return o.ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsCloudAntiMalwareOutput) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsCloudAntiMalware) *PreventionPolicyWindowsCloudAntiMalware {
		return &v
	}).(PreventionPolicyWindowsCloudAntiMalwarePtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsCloudAntiMalwareOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsCloudAntiMalware) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsCloudAntiMalwareOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsCloudAntiMalware) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsCloudAntiMalwarePtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsCloudAntiMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsCloudAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyWindowsCloudAntiMalwarePtrOutput) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutput() PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwarePtrOutput) ToPreventionPolicyWindowsCloudAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwarePtrOutput) Elem() PreventionPolicyWindowsCloudAntiMalwareOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalware) PreventionPolicyWindowsCloudAntiMalware {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsCloudAntiMalware
		return ret
	}).(PreventionPolicyWindowsCloudAntiMalwareOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsCloudAntiMalwarePtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsCloudAntiMalwarePtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesInput is an input type that accepts PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs and PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesInput` via:
//
//	PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs{...}
type PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput
	ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutputWithContext(context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput
}

type PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles)(nil)).Elem()
}

func (i PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput)
}

func (i PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput).ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrInput is an input type that accepts PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs, PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtr and PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrInput` via:
//
//	        PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput
	ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput
}

type preventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrType PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs

func PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtr(v *PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrInput {
	return (*preventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrType)(v)
}

func (*preventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles)(nil)).Elem()
}

func (i *preventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrType) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrType) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles)(nil)).Elem()
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return o.ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles) *PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles {
		return &v
	}).(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles)(nil)).Elem()
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput) ToPreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput) Elem() PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles) PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles
		return ret
	}).(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFiles) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareUserInitiated struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyWindowsCloudAntiMalwareUserInitiatedInput is an input type that accepts PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs and PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsCloudAntiMalwareUserInitiatedInput` via:
//
//	PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs{...}
type PreventionPolicyWindowsCloudAntiMalwareUserInitiatedInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput
	ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutputWithContext(context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput
}

type PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareUserInitiated)(nil)).Elem()
}

func (i PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput)
}

func (i PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput).ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrInput is an input type that accepts PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs, PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtr and PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrInput` via:
//
//	        PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput
	ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput
}

type preventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrType PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs

func PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtr(v *PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrInput {
	return (*preventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrType)(v)
}

func (*preventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsCloudAntiMalwareUserInitiated)(nil)).Elem()
}

func (i *preventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrType) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return i.ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrType) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareUserInitiated)(nil)).Elem()
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return o.ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsCloudAntiMalwareUserInitiated) *PreventionPolicyWindowsCloudAntiMalwareUserInitiated {
		return &v
	}).(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsCloudAntiMalwareUserInitiated) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsCloudAntiMalwareUserInitiated) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsCloudAntiMalwareUserInitiated)(nil)).Elem()
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput) ToPreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput {
	return o
}

func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput) Elem() PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalwareUserInitiated) PreventionPolicyWindowsCloudAntiMalwareUserInitiated {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsCloudAntiMalwareUserInitiated
		return ret
	}).(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalwareUserInitiated) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsCloudAntiMalwareUserInitiated) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsExtendedUserModeData struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
}

// PreventionPolicyWindowsExtendedUserModeDataInput is an input type that accepts PreventionPolicyWindowsExtendedUserModeDataArgs and PreventionPolicyWindowsExtendedUserModeDataOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsExtendedUserModeDataInput` via:
//
//	PreventionPolicyWindowsExtendedUserModeDataArgs{...}
type PreventionPolicyWindowsExtendedUserModeDataInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsExtendedUserModeDataOutput() PreventionPolicyWindowsExtendedUserModeDataOutput
	ToPreventionPolicyWindowsExtendedUserModeDataOutputWithContext(context.Context) PreventionPolicyWindowsExtendedUserModeDataOutput
}

type PreventionPolicyWindowsExtendedUserModeDataArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
}

func (PreventionPolicyWindowsExtendedUserModeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsExtendedUserModeData)(nil)).Elem()
}

func (i PreventionPolicyWindowsExtendedUserModeDataArgs) ToPreventionPolicyWindowsExtendedUserModeDataOutput() PreventionPolicyWindowsExtendedUserModeDataOutput {
	return i.ToPreventionPolicyWindowsExtendedUserModeDataOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsExtendedUserModeDataArgs) ToPreventionPolicyWindowsExtendedUserModeDataOutputWithContext(ctx context.Context) PreventionPolicyWindowsExtendedUserModeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsExtendedUserModeDataOutput)
}

func (i PreventionPolicyWindowsExtendedUserModeDataArgs) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutput() PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return i.ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsExtendedUserModeDataArgs) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsExtendedUserModeDataOutput).ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsExtendedUserModeDataPtrInput is an input type that accepts PreventionPolicyWindowsExtendedUserModeDataArgs, PreventionPolicyWindowsExtendedUserModeDataPtr and PreventionPolicyWindowsExtendedUserModeDataPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsExtendedUserModeDataPtrInput` via:
//
//	        PreventionPolicyWindowsExtendedUserModeDataArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsExtendedUserModeDataPtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsExtendedUserModeDataPtrOutput() PreventionPolicyWindowsExtendedUserModeDataPtrOutput
	ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(context.Context) PreventionPolicyWindowsExtendedUserModeDataPtrOutput
}

type preventionPolicyWindowsExtendedUserModeDataPtrType PreventionPolicyWindowsExtendedUserModeDataArgs

func PreventionPolicyWindowsExtendedUserModeDataPtr(v *PreventionPolicyWindowsExtendedUserModeDataArgs) PreventionPolicyWindowsExtendedUserModeDataPtrInput {
	return (*preventionPolicyWindowsExtendedUserModeDataPtrType)(v)
}

func (*preventionPolicyWindowsExtendedUserModeDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsExtendedUserModeData)(nil)).Elem()
}

func (i *preventionPolicyWindowsExtendedUserModeDataPtrType) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutput() PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return i.ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsExtendedUserModeDataPtrType) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsExtendedUserModeDataPtrOutput)
}

type PreventionPolicyWindowsExtendedUserModeDataOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsExtendedUserModeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsExtendedUserModeData)(nil)).Elem()
}

func (o PreventionPolicyWindowsExtendedUserModeDataOutput) ToPreventionPolicyWindowsExtendedUserModeDataOutput() PreventionPolicyWindowsExtendedUserModeDataOutput {
	return o
}

func (o PreventionPolicyWindowsExtendedUserModeDataOutput) ToPreventionPolicyWindowsExtendedUserModeDataOutputWithContext(ctx context.Context) PreventionPolicyWindowsExtendedUserModeDataOutput {
	return o
}

func (o PreventionPolicyWindowsExtendedUserModeDataOutput) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutput() PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return o.ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsExtendedUserModeDataOutput) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsExtendedUserModeData) *PreventionPolicyWindowsExtendedUserModeData {
		return &v
	}).(PreventionPolicyWindowsExtendedUserModeDataPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsExtendedUserModeDataOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsExtendedUserModeData) string { return v.Detection }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsExtendedUserModeDataPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsExtendedUserModeDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsExtendedUserModeData)(nil)).Elem()
}

func (o PreventionPolicyWindowsExtendedUserModeDataPtrOutput) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutput() PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return o
}

func (o PreventionPolicyWindowsExtendedUserModeDataPtrOutput) ToPreventionPolicyWindowsExtendedUserModeDataPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsExtendedUserModeDataPtrOutput {
	return o
}

func (o PreventionPolicyWindowsExtendedUserModeDataPtrOutput) Elem() PreventionPolicyWindowsExtendedUserModeDataOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsExtendedUserModeData) PreventionPolicyWindowsExtendedUserModeData {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsExtendedUserModeData
		return ret
	}).(PreventionPolicyWindowsExtendedUserModeDataOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsExtendedUserModeDataPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsExtendedUserModeData) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsSensorAntiMalware struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyWindowsSensorAntiMalwareInput is an input type that accepts PreventionPolicyWindowsSensorAntiMalwareArgs and PreventionPolicyWindowsSensorAntiMalwareOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsSensorAntiMalwareInput` via:
//
//	PreventionPolicyWindowsSensorAntiMalwareArgs{...}
type PreventionPolicyWindowsSensorAntiMalwareInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsSensorAntiMalwareOutput() PreventionPolicyWindowsSensorAntiMalwareOutput
	ToPreventionPolicyWindowsSensorAntiMalwareOutputWithContext(context.Context) PreventionPolicyWindowsSensorAntiMalwareOutput
}

type PreventionPolicyWindowsSensorAntiMalwareArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyWindowsSensorAntiMalwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalware)(nil)).Elem()
}

func (i PreventionPolicyWindowsSensorAntiMalwareArgs) ToPreventionPolicyWindowsSensorAntiMalwareOutput() PreventionPolicyWindowsSensorAntiMalwareOutput {
	return i.ToPreventionPolicyWindowsSensorAntiMalwareOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsSensorAntiMalwareArgs) ToPreventionPolicyWindowsSensorAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsSensorAntiMalwareOutput)
}

func (i PreventionPolicyWindowsSensorAntiMalwareArgs) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutput() PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return i.ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsSensorAntiMalwareArgs) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsSensorAntiMalwareOutput).ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsSensorAntiMalwarePtrInput is an input type that accepts PreventionPolicyWindowsSensorAntiMalwareArgs, PreventionPolicyWindowsSensorAntiMalwarePtr and PreventionPolicyWindowsSensorAntiMalwarePtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsSensorAntiMalwarePtrInput` via:
//
//	        PreventionPolicyWindowsSensorAntiMalwareArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsSensorAntiMalwarePtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsSensorAntiMalwarePtrOutput() PreventionPolicyWindowsSensorAntiMalwarePtrOutput
	ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(context.Context) PreventionPolicyWindowsSensorAntiMalwarePtrOutput
}

type preventionPolicyWindowsSensorAntiMalwarePtrType PreventionPolicyWindowsSensorAntiMalwareArgs

func PreventionPolicyWindowsSensorAntiMalwarePtr(v *PreventionPolicyWindowsSensorAntiMalwareArgs) PreventionPolicyWindowsSensorAntiMalwarePtrInput {
	return (*preventionPolicyWindowsSensorAntiMalwarePtrType)(v)
}

func (*preventionPolicyWindowsSensorAntiMalwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsSensorAntiMalware)(nil)).Elem()
}

func (i *preventionPolicyWindowsSensorAntiMalwarePtrType) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutput() PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return i.ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsSensorAntiMalwarePtrType) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsSensorAntiMalwarePtrOutput)
}

type PreventionPolicyWindowsSensorAntiMalwareOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsSensorAntiMalwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyWindowsSensorAntiMalwareOutput) ToPreventionPolicyWindowsSensorAntiMalwareOutput() PreventionPolicyWindowsSensorAntiMalwareOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwareOutput) ToPreventionPolicyWindowsSensorAntiMalwareOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwareOutput) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutput() PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return o.ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsSensorAntiMalwareOutput) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsSensorAntiMalware) *PreventionPolicyWindowsSensorAntiMalware {
		return &v
	}).(PreventionPolicyWindowsSensorAntiMalwarePtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsSensorAntiMalwareOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsSensorAntiMalware) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsSensorAntiMalwareOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsSensorAntiMalware) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsSensorAntiMalwarePtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsSensorAntiMalwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsSensorAntiMalware)(nil)).Elem()
}

func (o PreventionPolicyWindowsSensorAntiMalwarePtrOutput) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutput() PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwarePtrOutput) ToPreventionPolicyWindowsSensorAntiMalwarePtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwarePtrOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwarePtrOutput) Elem() PreventionPolicyWindowsSensorAntiMalwareOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsSensorAntiMalware) PreventionPolicyWindowsSensorAntiMalware {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsSensorAntiMalware
		return ret
	}).(PreventionPolicyWindowsSensorAntiMalwareOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsSensorAntiMalwarePtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsSensorAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsSensorAntiMalwarePtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsSensorAntiMalware) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type PreventionPolicyWindowsSensorAntiMalwareUserInitiated struct {
	// Machine learning level for detection.
	Detection string `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention string `pulumi:"prevention"`
}

// PreventionPolicyWindowsSensorAntiMalwareUserInitiatedInput is an input type that accepts PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs and PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsSensorAntiMalwareUserInitiatedInput` via:
//
//	PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs{...}
type PreventionPolicyWindowsSensorAntiMalwareUserInitiatedInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput
	ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutputWithContext(context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput
}

type PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs struct {
	// Machine learning level for detection.
	Detection pulumi.StringInput `pulumi:"detection"`
	// Machine learning level for prevention.
	Prevention pulumi.StringInput `pulumi:"prevention"`
}

func (PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalwareUserInitiated)(nil)).Elem()
}

func (i PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput {
	return i.ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput)
}

func (i PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return i.ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(context.Background())
}

func (i PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput).ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(ctx)
}

// PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrInput is an input type that accepts PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs, PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtr and PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput values.
// You can construct a concrete instance of `PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrInput` via:
//
//	        PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs{...}
//
//	or:
//
//	        nil
type PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrInput interface {
	pulumi.Input

	ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput
	ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput
}

type preventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrType PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs

func PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtr(v *PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrInput {
	return (*preventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrType)(v)
}

func (*preventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsSensorAntiMalwareUserInitiated)(nil)).Elem()
}

func (i *preventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrType) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return i.ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(context.Background())
}

func (i *preventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrType) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput)
}

type PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalwareUserInitiated)(nil)).Elem()
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return o.ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(context.Background())
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreventionPolicyWindowsSensorAntiMalwareUserInitiated) *PreventionPolicyWindowsSensorAntiMalwareUserInitiated {
		return &v
	}).(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) Detection() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsSensorAntiMalwareUserInitiated) string { return v.Detection }).(pulumi.StringOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput) Prevention() pulumi.StringOutput {
	return o.ApplyT(func(v PreventionPolicyWindowsSensorAntiMalwareUserInitiated) string { return v.Prevention }).(pulumi.StringOutput)
}

type PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput struct{ *pulumi.OutputState }

func (PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreventionPolicyWindowsSensorAntiMalwareUserInitiated)(nil)).Elem()
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput) ToPreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutputWithContext(ctx context.Context) PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput {
	return o
}

func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput) Elem() PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsSensorAntiMalwareUserInitiated) PreventionPolicyWindowsSensorAntiMalwareUserInitiated {
		if v != nil {
			return *v
		}
		var ret PreventionPolicyWindowsSensorAntiMalwareUserInitiated
		return ret
	}).(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput)
}

// Machine learning level for detection.
func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput) Detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsSensorAntiMalwareUserInitiated) *string {
		if v == nil {
			return nil
		}
		return &v.Detection
	}).(pulumi.StringPtrOutput)
}

// Machine learning level for prevention.
func (o PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput) Prevention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreventionPolicyWindowsSensorAntiMalwareUserInitiated) *string {
		if v == nil {
			return nil
		}
		return &v.Prevention
	}).(pulumi.StringPtrOutput)
}

type SensorUpdatePolicySchedule struct {
	// Enable the scheduler for sensor update policy.
	Enabled bool `pulumi:"enabled"`
	// The time block to prevent sensor updates. Only set when enabled is true.
	TimeBlocks []SensorUpdatePolicyScheduleTimeBlock `pulumi:"timeBlocks"`
	// The time zones that will be used for the time blocks. Only set when enabled is true.
	Timezone *string `pulumi:"timezone"`
}

// SensorUpdatePolicyScheduleInput is an input type that accepts SensorUpdatePolicyScheduleArgs and SensorUpdatePolicyScheduleOutput values.
// You can construct a concrete instance of `SensorUpdatePolicyScheduleInput` via:
//
//	SensorUpdatePolicyScheduleArgs{...}
type SensorUpdatePolicyScheduleInput interface {
	pulumi.Input

	ToSensorUpdatePolicyScheduleOutput() SensorUpdatePolicyScheduleOutput
	ToSensorUpdatePolicyScheduleOutputWithContext(context.Context) SensorUpdatePolicyScheduleOutput
}

type SensorUpdatePolicyScheduleArgs struct {
	// Enable the scheduler for sensor update policy.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The time block to prevent sensor updates. Only set when enabled is true.
	TimeBlocks SensorUpdatePolicyScheduleTimeBlockArrayInput `pulumi:"timeBlocks"`
	// The time zones that will be used for the time blocks. Only set when enabled is true.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
}

func (SensorUpdatePolicyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorUpdatePolicySchedule)(nil)).Elem()
}

func (i SensorUpdatePolicyScheduleArgs) ToSensorUpdatePolicyScheduleOutput() SensorUpdatePolicyScheduleOutput {
	return i.ToSensorUpdatePolicyScheduleOutputWithContext(context.Background())
}

func (i SensorUpdatePolicyScheduleArgs) ToSensorUpdatePolicyScheduleOutputWithContext(ctx context.Context) SensorUpdatePolicyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorUpdatePolicyScheduleOutput)
}

func (i SensorUpdatePolicyScheduleArgs) ToSensorUpdatePolicySchedulePtrOutput() SensorUpdatePolicySchedulePtrOutput {
	return i.ToSensorUpdatePolicySchedulePtrOutputWithContext(context.Background())
}

func (i SensorUpdatePolicyScheduleArgs) ToSensorUpdatePolicySchedulePtrOutputWithContext(ctx context.Context) SensorUpdatePolicySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorUpdatePolicyScheduleOutput).ToSensorUpdatePolicySchedulePtrOutputWithContext(ctx)
}

// SensorUpdatePolicySchedulePtrInput is an input type that accepts SensorUpdatePolicyScheduleArgs, SensorUpdatePolicySchedulePtr and SensorUpdatePolicySchedulePtrOutput values.
// You can construct a concrete instance of `SensorUpdatePolicySchedulePtrInput` via:
//
//	        SensorUpdatePolicyScheduleArgs{...}
//
//	or:
//
//	        nil
type SensorUpdatePolicySchedulePtrInput interface {
	pulumi.Input

	ToSensorUpdatePolicySchedulePtrOutput() SensorUpdatePolicySchedulePtrOutput
	ToSensorUpdatePolicySchedulePtrOutputWithContext(context.Context) SensorUpdatePolicySchedulePtrOutput
}

type sensorUpdatePolicySchedulePtrType SensorUpdatePolicyScheduleArgs

func SensorUpdatePolicySchedulePtr(v *SensorUpdatePolicyScheduleArgs) SensorUpdatePolicySchedulePtrInput {
	return (*sensorUpdatePolicySchedulePtrType)(v)
}

func (*sensorUpdatePolicySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SensorUpdatePolicySchedule)(nil)).Elem()
}

func (i *sensorUpdatePolicySchedulePtrType) ToSensorUpdatePolicySchedulePtrOutput() SensorUpdatePolicySchedulePtrOutput {
	return i.ToSensorUpdatePolicySchedulePtrOutputWithContext(context.Background())
}

func (i *sensorUpdatePolicySchedulePtrType) ToSensorUpdatePolicySchedulePtrOutputWithContext(ctx context.Context) SensorUpdatePolicySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorUpdatePolicySchedulePtrOutput)
}

type SensorUpdatePolicyScheduleOutput struct{ *pulumi.OutputState }

func (SensorUpdatePolicyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorUpdatePolicySchedule)(nil)).Elem()
}

func (o SensorUpdatePolicyScheduleOutput) ToSensorUpdatePolicyScheduleOutput() SensorUpdatePolicyScheduleOutput {
	return o
}

func (o SensorUpdatePolicyScheduleOutput) ToSensorUpdatePolicyScheduleOutputWithContext(ctx context.Context) SensorUpdatePolicyScheduleOutput {
	return o
}

func (o SensorUpdatePolicyScheduleOutput) ToSensorUpdatePolicySchedulePtrOutput() SensorUpdatePolicySchedulePtrOutput {
	return o.ToSensorUpdatePolicySchedulePtrOutputWithContext(context.Background())
}

func (o SensorUpdatePolicyScheduleOutput) ToSensorUpdatePolicySchedulePtrOutputWithContext(ctx context.Context) SensorUpdatePolicySchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SensorUpdatePolicySchedule) *SensorUpdatePolicySchedule {
		return &v
	}).(SensorUpdatePolicySchedulePtrOutput)
}

// Enable the scheduler for sensor update policy.
func (o SensorUpdatePolicyScheduleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SensorUpdatePolicySchedule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The time block to prevent sensor updates. Only set when enabled is true.
func (o SensorUpdatePolicyScheduleOutput) TimeBlocks() SensorUpdatePolicyScheduleTimeBlockArrayOutput {
	return o.ApplyT(func(v SensorUpdatePolicySchedule) []SensorUpdatePolicyScheduleTimeBlock { return v.TimeBlocks }).(SensorUpdatePolicyScheduleTimeBlockArrayOutput)
}

// The time zones that will be used for the time blocks. Only set when enabled is true.
func (o SensorUpdatePolicyScheduleOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SensorUpdatePolicySchedule) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type SensorUpdatePolicySchedulePtrOutput struct{ *pulumi.OutputState }

func (SensorUpdatePolicySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensorUpdatePolicySchedule)(nil)).Elem()
}

func (o SensorUpdatePolicySchedulePtrOutput) ToSensorUpdatePolicySchedulePtrOutput() SensorUpdatePolicySchedulePtrOutput {
	return o
}

func (o SensorUpdatePolicySchedulePtrOutput) ToSensorUpdatePolicySchedulePtrOutputWithContext(ctx context.Context) SensorUpdatePolicySchedulePtrOutput {
	return o
}

func (o SensorUpdatePolicySchedulePtrOutput) Elem() SensorUpdatePolicyScheduleOutput {
	return o.ApplyT(func(v *SensorUpdatePolicySchedule) SensorUpdatePolicySchedule {
		if v != nil {
			return *v
		}
		var ret SensorUpdatePolicySchedule
		return ret
	}).(SensorUpdatePolicyScheduleOutput)
}

// Enable the scheduler for sensor update policy.
func (o SensorUpdatePolicySchedulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SensorUpdatePolicySchedule) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The time block to prevent sensor updates. Only set when enabled is true.
func (o SensorUpdatePolicySchedulePtrOutput) TimeBlocks() SensorUpdatePolicyScheduleTimeBlockArrayOutput {
	return o.ApplyT(func(v *SensorUpdatePolicySchedule) []SensorUpdatePolicyScheduleTimeBlock {
		if v == nil {
			return nil
		}
		return v.TimeBlocks
	}).(SensorUpdatePolicyScheduleTimeBlockArrayOutput)
}

// The time zones that will be used for the time blocks. Only set when enabled is true.
func (o SensorUpdatePolicySchedulePtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SensorUpdatePolicySchedule) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

type SensorUpdatePolicyScheduleTimeBlock struct {
	// The days of the week the time block should be active.
	Days []string `pulumi:"days"`
	// The end time for the time block in 24HR format. Must be atleast 1 hour more than start_time.
	EndTime string `pulumi:"endTime"`
	// The start time for the time block in 24HR format. Must be atleast 1 hour before end_time.
	StartTime string `pulumi:"startTime"`
}

// SensorUpdatePolicyScheduleTimeBlockInput is an input type that accepts SensorUpdatePolicyScheduleTimeBlockArgs and SensorUpdatePolicyScheduleTimeBlockOutput values.
// You can construct a concrete instance of `SensorUpdatePolicyScheduleTimeBlockInput` via:
//
//	SensorUpdatePolicyScheduleTimeBlockArgs{...}
type SensorUpdatePolicyScheduleTimeBlockInput interface {
	pulumi.Input

	ToSensorUpdatePolicyScheduleTimeBlockOutput() SensorUpdatePolicyScheduleTimeBlockOutput
	ToSensorUpdatePolicyScheduleTimeBlockOutputWithContext(context.Context) SensorUpdatePolicyScheduleTimeBlockOutput
}

type SensorUpdatePolicyScheduleTimeBlockArgs struct {
	// The days of the week the time block should be active.
	Days pulumi.StringArrayInput `pulumi:"days"`
	// The end time for the time block in 24HR format. Must be atleast 1 hour more than start_time.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The start time for the time block in 24HR format. Must be atleast 1 hour before end_time.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (SensorUpdatePolicyScheduleTimeBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorUpdatePolicyScheduleTimeBlock)(nil)).Elem()
}

func (i SensorUpdatePolicyScheduleTimeBlockArgs) ToSensorUpdatePolicyScheduleTimeBlockOutput() SensorUpdatePolicyScheduleTimeBlockOutput {
	return i.ToSensorUpdatePolicyScheduleTimeBlockOutputWithContext(context.Background())
}

func (i SensorUpdatePolicyScheduleTimeBlockArgs) ToSensorUpdatePolicyScheduleTimeBlockOutputWithContext(ctx context.Context) SensorUpdatePolicyScheduleTimeBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorUpdatePolicyScheduleTimeBlockOutput)
}

// SensorUpdatePolicyScheduleTimeBlockArrayInput is an input type that accepts SensorUpdatePolicyScheduleTimeBlockArray and SensorUpdatePolicyScheduleTimeBlockArrayOutput values.
// You can construct a concrete instance of `SensorUpdatePolicyScheduleTimeBlockArrayInput` via:
//
//	SensorUpdatePolicyScheduleTimeBlockArray{ SensorUpdatePolicyScheduleTimeBlockArgs{...} }
type SensorUpdatePolicyScheduleTimeBlockArrayInput interface {
	pulumi.Input

	ToSensorUpdatePolicyScheduleTimeBlockArrayOutput() SensorUpdatePolicyScheduleTimeBlockArrayOutput
	ToSensorUpdatePolicyScheduleTimeBlockArrayOutputWithContext(context.Context) SensorUpdatePolicyScheduleTimeBlockArrayOutput
}

type SensorUpdatePolicyScheduleTimeBlockArray []SensorUpdatePolicyScheduleTimeBlockInput

func (SensorUpdatePolicyScheduleTimeBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorUpdatePolicyScheduleTimeBlock)(nil)).Elem()
}

func (i SensorUpdatePolicyScheduleTimeBlockArray) ToSensorUpdatePolicyScheduleTimeBlockArrayOutput() SensorUpdatePolicyScheduleTimeBlockArrayOutput {
	return i.ToSensorUpdatePolicyScheduleTimeBlockArrayOutputWithContext(context.Background())
}

func (i SensorUpdatePolicyScheduleTimeBlockArray) ToSensorUpdatePolicyScheduleTimeBlockArrayOutputWithContext(ctx context.Context) SensorUpdatePolicyScheduleTimeBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensorUpdatePolicyScheduleTimeBlockArrayOutput)
}

type SensorUpdatePolicyScheduleTimeBlockOutput struct{ *pulumi.OutputState }

func (SensorUpdatePolicyScheduleTimeBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensorUpdatePolicyScheduleTimeBlock)(nil)).Elem()
}

func (o SensorUpdatePolicyScheduleTimeBlockOutput) ToSensorUpdatePolicyScheduleTimeBlockOutput() SensorUpdatePolicyScheduleTimeBlockOutput {
	return o
}

func (o SensorUpdatePolicyScheduleTimeBlockOutput) ToSensorUpdatePolicyScheduleTimeBlockOutputWithContext(ctx context.Context) SensorUpdatePolicyScheduleTimeBlockOutput {
	return o
}

// The days of the week the time block should be active.
func (o SensorUpdatePolicyScheduleTimeBlockOutput) Days() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SensorUpdatePolicyScheduleTimeBlock) []string { return v.Days }).(pulumi.StringArrayOutput)
}

// The end time for the time block in 24HR format. Must be atleast 1 hour more than start_time.
func (o SensorUpdatePolicyScheduleTimeBlockOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v SensorUpdatePolicyScheduleTimeBlock) string { return v.EndTime }).(pulumi.StringOutput)
}

// The start time for the time block in 24HR format. Must be atleast 1 hour before end_time.
func (o SensorUpdatePolicyScheduleTimeBlockOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v SensorUpdatePolicyScheduleTimeBlock) string { return v.StartTime }).(pulumi.StringOutput)
}

type SensorUpdatePolicyScheduleTimeBlockArrayOutput struct{ *pulumi.OutputState }

func (SensorUpdatePolicyScheduleTimeBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SensorUpdatePolicyScheduleTimeBlock)(nil)).Elem()
}

func (o SensorUpdatePolicyScheduleTimeBlockArrayOutput) ToSensorUpdatePolicyScheduleTimeBlockArrayOutput() SensorUpdatePolicyScheduleTimeBlockArrayOutput {
	return o
}

func (o SensorUpdatePolicyScheduleTimeBlockArrayOutput) ToSensorUpdatePolicyScheduleTimeBlockArrayOutputWithContext(ctx context.Context) SensorUpdatePolicyScheduleTimeBlockArrayOutput {
	return o
}

func (o SensorUpdatePolicyScheduleTimeBlockArrayOutput) Index(i pulumi.IntInput) SensorUpdatePolicyScheduleTimeBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SensorUpdatePolicyScheduleTimeBlock {
		return vs[0].([]SensorUpdatePolicyScheduleTimeBlock)[vs[1].(int)]
	}).(SensorUpdatePolicyScheduleTimeBlockOutput)
}

type GetSensorUpdatePolicyBuildsLinux struct {
	// All sensor builds for the specific platform.
	Alls []GetSensorUpdatePolicyBuildsLinuxAll `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsLinuxLatest `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsLinuxN1 `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsLinuxN2 `pulumi:"n2"`
}

// GetSensorUpdatePolicyBuildsLinuxInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArgs and GetSensorUpdatePolicyBuildsLinuxOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArgs{...}
type GetSensorUpdatePolicyBuildsLinuxInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxOutput() GetSensorUpdatePolicyBuildsLinuxOutput
	ToGetSensorUpdatePolicyBuildsLinuxOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxOutput
}

type GetSensorUpdatePolicyBuildsLinuxArgs struct {
	// All sensor builds for the specific platform.
	Alls GetSensorUpdatePolicyBuildsLinuxAllArrayInput `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsLinuxLatestInput `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsLinuxN1Input `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsLinuxN2Input `pulumi:"n2"`
}

func (GetSensorUpdatePolicyBuildsLinuxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinux)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArgs) ToGetSensorUpdatePolicyBuildsLinuxOutput() GetSensorUpdatePolicyBuildsLinuxOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArgs) ToGetSensorUpdatePolicyBuildsLinuxOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxOutput)
}

type GetSensorUpdatePolicyBuildsLinuxOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinux)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxOutput) ToGetSensorUpdatePolicyBuildsLinuxOutput() GetSensorUpdatePolicyBuildsLinuxOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxOutput) ToGetSensorUpdatePolicyBuildsLinuxOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxOutput {
	return o
}

// All sensor builds for the specific platform.
func (o GetSensorUpdatePolicyBuildsLinuxOutput) Alls() GetSensorUpdatePolicyBuildsLinuxAllArrayOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinux) []GetSensorUpdatePolicyBuildsLinuxAll { return v.Alls }).(GetSensorUpdatePolicyBuildsLinuxAllArrayOutput)
}

// The latest sensor build.
func (o GetSensorUpdatePolicyBuildsLinuxOutput) Latest() GetSensorUpdatePolicyBuildsLinuxLatestOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinux) GetSensorUpdatePolicyBuildsLinuxLatest { return v.Latest }).(GetSensorUpdatePolicyBuildsLinuxLatestOutput)
}

// The n-1 sensor build.
func (o GetSensorUpdatePolicyBuildsLinuxOutput) N1() GetSensorUpdatePolicyBuildsLinuxN1Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinux) GetSensorUpdatePolicyBuildsLinuxN1 { return v.N1 }).(GetSensorUpdatePolicyBuildsLinuxN1Output)
}

// The n-2 sensor build.
func (o GetSensorUpdatePolicyBuildsLinuxOutput) N2() GetSensorUpdatePolicyBuildsLinuxN2Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinux) GetSensorUpdatePolicyBuildsLinuxN2 { return v.N2 }).(GetSensorUpdatePolicyBuildsLinuxN2Output)
}

type GetSensorUpdatePolicyBuildsLinuxAll struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxAllInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxAllArgs and GetSensorUpdatePolicyBuildsLinuxAllOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxAllInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxAllArgs{...}
type GetSensorUpdatePolicyBuildsLinuxAllInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxAllOutput() GetSensorUpdatePolicyBuildsLinuxAllOutput
	ToGetSensorUpdatePolicyBuildsLinuxAllOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxAllOutput
}

type GetSensorUpdatePolicyBuildsLinuxAllArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxAll)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxAllArgs) ToGetSensorUpdatePolicyBuildsLinuxAllOutput() GetSensorUpdatePolicyBuildsLinuxAllOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxAllOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxAllArgs) ToGetSensorUpdatePolicyBuildsLinuxAllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxAllOutput)
}

// GetSensorUpdatePolicyBuildsLinuxAllArrayInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxAllArray and GetSensorUpdatePolicyBuildsLinuxAllArrayOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxAllArrayInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxAllArray{ GetSensorUpdatePolicyBuildsLinuxAllArgs{...} }
type GetSensorUpdatePolicyBuildsLinuxAllArrayInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutput() GetSensorUpdatePolicyBuildsLinuxAllArrayOutput
	ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxAllArrayOutput
}

type GetSensorUpdatePolicyBuildsLinuxAllArray []GetSensorUpdatePolicyBuildsLinuxAllInput

func (GetSensorUpdatePolicyBuildsLinuxAllArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsLinuxAll)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxAllArray) ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutput() GetSensorUpdatePolicyBuildsLinuxAllArrayOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxAllArray) ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxAllArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxAllArrayOutput)
}

type GetSensorUpdatePolicyBuildsLinuxAllOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxAll)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxAllOutput) ToGetSensorUpdatePolicyBuildsLinuxAllOutput() GetSensorUpdatePolicyBuildsLinuxAllOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxAllOutput) ToGetSensorUpdatePolicyBuildsLinuxAllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxAllOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxAllOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxAll) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxAllOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxAll) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxAllOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxAll) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxAllOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxAll) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxAllArrayOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxAllArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsLinuxAll)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxAllArrayOutput) ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutput() GetSensorUpdatePolicyBuildsLinuxAllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxAllArrayOutput) ToGetSensorUpdatePolicyBuildsLinuxAllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxAllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxAllArrayOutput) Index(i pulumi.IntInput) GetSensorUpdatePolicyBuildsLinuxAllOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorUpdatePolicyBuildsLinuxAll {
		return vs[0].([]GetSensorUpdatePolicyBuildsLinuxAll)[vs[1].(int)]
	}).(GetSensorUpdatePolicyBuildsLinuxAllOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64 struct {
	// All sensor builds for the specific platform.
	Alls []GetSensorUpdatePolicyBuildsLinuxArm64All `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsLinuxArm64Latest `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsLinuxArm64N1 `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsLinuxArm64N2 `pulumi:"n2"`
}

// GetSensorUpdatePolicyBuildsLinuxArm64Input is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArm64Args and GetSensorUpdatePolicyBuildsLinuxArm64Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxArm64Input` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArm64Args{...}
type GetSensorUpdatePolicyBuildsLinuxArm64Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxArm64Output() GetSensorUpdatePolicyBuildsLinuxArm64Output
	ToGetSensorUpdatePolicyBuildsLinuxArm64OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxArm64Output
}

type GetSensorUpdatePolicyBuildsLinuxArm64Args struct {
	// All sensor builds for the specific platform.
	Alls GetSensorUpdatePolicyBuildsLinuxArm64AllArrayInput `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsLinuxArm64LatestInput `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsLinuxArm64N1Input `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsLinuxArm64N2Input `pulumi:"n2"`
}

func (GetSensorUpdatePolicyBuildsLinuxArm64Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64Args) ToGetSensorUpdatePolicyBuildsLinuxArm64Output() GetSensorUpdatePolicyBuildsLinuxArm64Output {
	return i.ToGetSensorUpdatePolicyBuildsLinuxArm64OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64Args) ToGetSensorUpdatePolicyBuildsLinuxArm64OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxArm64Output)
}

type GetSensorUpdatePolicyBuildsLinuxArm64Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxArm64Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64Output) ToGetSensorUpdatePolicyBuildsLinuxArm64Output() GetSensorUpdatePolicyBuildsLinuxArm64Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64Output) ToGetSensorUpdatePolicyBuildsLinuxArm64OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64Output {
	return o
}

// All sensor builds for the specific platform.
func (o GetSensorUpdatePolicyBuildsLinuxArm64Output) Alls() GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64) []GetSensorUpdatePolicyBuildsLinuxArm64All {
		return v.Alls
	}).(GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput)
}

// The latest sensor build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64Output) Latest() GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64) GetSensorUpdatePolicyBuildsLinuxArm64Latest {
		return v.Latest
	}).(GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput)
}

// The n-1 sensor build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64Output) N1() GetSensorUpdatePolicyBuildsLinuxArm64N1Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64) GetSensorUpdatePolicyBuildsLinuxArm64N1 { return v.N1 }).(GetSensorUpdatePolicyBuildsLinuxArm64N1Output)
}

// The n-2 sensor build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64Output) N2() GetSensorUpdatePolicyBuildsLinuxArm64N2Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64) GetSensorUpdatePolicyBuildsLinuxArm64N2 { return v.N2 }).(GetSensorUpdatePolicyBuildsLinuxArm64N2Output)
}

type GetSensorUpdatePolicyBuildsLinuxArm64All struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxArm64AllInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArm64AllArgs and GetSensorUpdatePolicyBuildsLinuxArm64AllOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxArm64AllInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArm64AllArgs{...}
type GetSensorUpdatePolicyBuildsLinuxArm64AllInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutput() GetSensorUpdatePolicyBuildsLinuxArm64AllOutput
	ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxArm64AllOutput
}

type GetSensorUpdatePolicyBuildsLinuxArm64AllArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxArm64AllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64All)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64AllArgs) ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutput() GetSensorUpdatePolicyBuildsLinuxArm64AllOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64AllArgs) ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64AllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxArm64AllOutput)
}

// GetSensorUpdatePolicyBuildsLinuxArm64AllArrayInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArm64AllArray and GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxArm64AllArrayInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArm64AllArray{ GetSensorUpdatePolicyBuildsLinuxArm64AllArgs{...} }
type GetSensorUpdatePolicyBuildsLinuxArm64AllArrayInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput() GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput
	ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput
}

type GetSensorUpdatePolicyBuildsLinuxArm64AllArray []GetSensorUpdatePolicyBuildsLinuxArm64AllInput

func (GetSensorUpdatePolicyBuildsLinuxArm64AllArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsLinuxArm64All)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64AllArray) ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput() GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64AllArray) ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64AllOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64All)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutput() GetSensorUpdatePolicyBuildsLinuxArm64AllOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) ToGetSensorUpdatePolicyBuildsLinuxArm64AllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64AllOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64All) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64All) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64All) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64AllOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64All) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsLinuxArm64All)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput) ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput() GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput) ToGetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput) Index(i pulumi.IntInput) GetSensorUpdatePolicyBuildsLinuxArm64AllOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorUpdatePolicyBuildsLinuxArm64All {
		return vs[0].([]GetSensorUpdatePolicyBuildsLinuxArm64All)[vs[1].(int)]
	}).(GetSensorUpdatePolicyBuildsLinuxArm64AllOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64Latest struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxArm64LatestInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs and GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxArm64LatestInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs{...}
type GetSensorUpdatePolicyBuildsLinuxArm64LatestInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutput() GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput
	ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput
}

type GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64Latest)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs) ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutput() GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs) ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64Latest)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutput() GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) ToGetSensorUpdatePolicyBuildsLinuxArm64LatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64Latest) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64Latest) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64Latest) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64Latest) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64N1 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxArm64N1Input is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArm64N1Args and GetSensorUpdatePolicyBuildsLinuxArm64N1Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxArm64N1Input` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArm64N1Args{...}
type GetSensorUpdatePolicyBuildsLinuxArm64N1Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxArm64N1Output() GetSensorUpdatePolicyBuildsLinuxArm64N1Output
	ToGetSensorUpdatePolicyBuildsLinuxArm64N1OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxArm64N1Output
}

type GetSensorUpdatePolicyBuildsLinuxArm64N1Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxArm64N1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64N1)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64N1Args) ToGetSensorUpdatePolicyBuildsLinuxArm64N1Output() GetSensorUpdatePolicyBuildsLinuxArm64N1Output {
	return i.ToGetSensorUpdatePolicyBuildsLinuxArm64N1OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64N1Args) ToGetSensorUpdatePolicyBuildsLinuxArm64N1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64N1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxArm64N1Output)
}

type GetSensorUpdatePolicyBuildsLinuxArm64N1Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxArm64N1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64N1)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64N1Output) ToGetSensorUpdatePolicyBuildsLinuxArm64N1Output() GetSensorUpdatePolicyBuildsLinuxArm64N1Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64N1Output) ToGetSensorUpdatePolicyBuildsLinuxArm64N1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64N1Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N1Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N1) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N1Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N1) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N1Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N1) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N1Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N1) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxArm64N2 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxArm64N2Input is an input type that accepts GetSensorUpdatePolicyBuildsLinuxArm64N2Args and GetSensorUpdatePolicyBuildsLinuxArm64N2Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxArm64N2Input` via:
//
//	GetSensorUpdatePolicyBuildsLinuxArm64N2Args{...}
type GetSensorUpdatePolicyBuildsLinuxArm64N2Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxArm64N2Output() GetSensorUpdatePolicyBuildsLinuxArm64N2Output
	ToGetSensorUpdatePolicyBuildsLinuxArm64N2OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxArm64N2Output
}

type GetSensorUpdatePolicyBuildsLinuxArm64N2Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxArm64N2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64N2)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64N2Args) ToGetSensorUpdatePolicyBuildsLinuxArm64N2Output() GetSensorUpdatePolicyBuildsLinuxArm64N2Output {
	return i.ToGetSensorUpdatePolicyBuildsLinuxArm64N2OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxArm64N2Args) ToGetSensorUpdatePolicyBuildsLinuxArm64N2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64N2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxArm64N2Output)
}

type GetSensorUpdatePolicyBuildsLinuxArm64N2Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxArm64N2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64N2)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64N2Output) ToGetSensorUpdatePolicyBuildsLinuxArm64N2Output() GetSensorUpdatePolicyBuildsLinuxArm64N2Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxArm64N2Output) ToGetSensorUpdatePolicyBuildsLinuxArm64N2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxArm64N2Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N2Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N2) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N2Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N2) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N2Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N2) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxArm64N2Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxArm64N2) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxLatest struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxLatestInput is an input type that accepts GetSensorUpdatePolicyBuildsLinuxLatestArgs and GetSensorUpdatePolicyBuildsLinuxLatestOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxLatestInput` via:
//
//	GetSensorUpdatePolicyBuildsLinuxLatestArgs{...}
type GetSensorUpdatePolicyBuildsLinuxLatestInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxLatestOutput() GetSensorUpdatePolicyBuildsLinuxLatestOutput
	ToGetSensorUpdatePolicyBuildsLinuxLatestOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxLatestOutput
}

type GetSensorUpdatePolicyBuildsLinuxLatestArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxLatestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxLatest)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxLatestArgs) ToGetSensorUpdatePolicyBuildsLinuxLatestOutput() GetSensorUpdatePolicyBuildsLinuxLatestOutput {
	return i.ToGetSensorUpdatePolicyBuildsLinuxLatestOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxLatestArgs) ToGetSensorUpdatePolicyBuildsLinuxLatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxLatestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxLatestOutput)
}

type GetSensorUpdatePolicyBuildsLinuxLatestOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxLatestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxLatest)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxLatestOutput) ToGetSensorUpdatePolicyBuildsLinuxLatestOutput() GetSensorUpdatePolicyBuildsLinuxLatestOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxLatestOutput) ToGetSensorUpdatePolicyBuildsLinuxLatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxLatestOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxLatestOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxLatest) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxLatestOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxLatest) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxLatestOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxLatest) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxLatestOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxLatest) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxN1 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxN1Input is an input type that accepts GetSensorUpdatePolicyBuildsLinuxN1Args and GetSensorUpdatePolicyBuildsLinuxN1Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxN1Input` via:
//
//	GetSensorUpdatePolicyBuildsLinuxN1Args{...}
type GetSensorUpdatePolicyBuildsLinuxN1Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxN1Output() GetSensorUpdatePolicyBuildsLinuxN1Output
	ToGetSensorUpdatePolicyBuildsLinuxN1OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxN1Output
}

type GetSensorUpdatePolicyBuildsLinuxN1Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxN1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxN1)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxN1Args) ToGetSensorUpdatePolicyBuildsLinuxN1Output() GetSensorUpdatePolicyBuildsLinuxN1Output {
	return i.ToGetSensorUpdatePolicyBuildsLinuxN1OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxN1Args) ToGetSensorUpdatePolicyBuildsLinuxN1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxN1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxN1Output)
}

type GetSensorUpdatePolicyBuildsLinuxN1Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxN1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxN1)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxN1Output) ToGetSensorUpdatePolicyBuildsLinuxN1Output() GetSensorUpdatePolicyBuildsLinuxN1Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxN1Output) ToGetSensorUpdatePolicyBuildsLinuxN1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxN1Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxN1Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN1) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxN1Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN1) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxN1Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN1) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxN1Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN1) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsLinuxN2 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsLinuxN2Input is an input type that accepts GetSensorUpdatePolicyBuildsLinuxN2Args and GetSensorUpdatePolicyBuildsLinuxN2Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsLinuxN2Input` via:
//
//	GetSensorUpdatePolicyBuildsLinuxN2Args{...}
type GetSensorUpdatePolicyBuildsLinuxN2Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsLinuxN2Output() GetSensorUpdatePolicyBuildsLinuxN2Output
	ToGetSensorUpdatePolicyBuildsLinuxN2OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsLinuxN2Output
}

type GetSensorUpdatePolicyBuildsLinuxN2Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsLinuxN2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxN2)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsLinuxN2Args) ToGetSensorUpdatePolicyBuildsLinuxN2Output() GetSensorUpdatePolicyBuildsLinuxN2Output {
	return i.ToGetSensorUpdatePolicyBuildsLinuxN2OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsLinuxN2Args) ToGetSensorUpdatePolicyBuildsLinuxN2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxN2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsLinuxN2Output)
}

type GetSensorUpdatePolicyBuildsLinuxN2Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsLinuxN2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxN2)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsLinuxN2Output) ToGetSensorUpdatePolicyBuildsLinuxN2Output() GetSensorUpdatePolicyBuildsLinuxN2Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsLinuxN2Output) ToGetSensorUpdatePolicyBuildsLinuxN2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsLinuxN2Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxN2Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN2) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsLinuxN2Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN2) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsLinuxN2Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN2) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsLinuxN2Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsLinuxN2) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsMac struct {
	// All sensor builds for the specific platform.
	Alls []GetSensorUpdatePolicyBuildsMacAll `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsMacLatest `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsMacN1 `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsMacN2 `pulumi:"n2"`
}

// GetSensorUpdatePolicyBuildsMacInput is an input type that accepts GetSensorUpdatePolicyBuildsMacArgs and GetSensorUpdatePolicyBuildsMacOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsMacInput` via:
//
//	GetSensorUpdatePolicyBuildsMacArgs{...}
type GetSensorUpdatePolicyBuildsMacInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsMacOutput() GetSensorUpdatePolicyBuildsMacOutput
	ToGetSensorUpdatePolicyBuildsMacOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsMacOutput
}

type GetSensorUpdatePolicyBuildsMacArgs struct {
	// All sensor builds for the specific platform.
	Alls GetSensorUpdatePolicyBuildsMacAllArrayInput `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsMacLatestInput `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsMacN1Input `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsMacN2Input `pulumi:"n2"`
}

func (GetSensorUpdatePolicyBuildsMacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMac)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsMacArgs) ToGetSensorUpdatePolicyBuildsMacOutput() GetSensorUpdatePolicyBuildsMacOutput {
	return i.ToGetSensorUpdatePolicyBuildsMacOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsMacArgs) ToGetSensorUpdatePolicyBuildsMacOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsMacOutput)
}

type GetSensorUpdatePolicyBuildsMacOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsMacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMac)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsMacOutput) ToGetSensorUpdatePolicyBuildsMacOutput() GetSensorUpdatePolicyBuildsMacOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacOutput) ToGetSensorUpdatePolicyBuildsMacOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacOutput {
	return o
}

// All sensor builds for the specific platform.
func (o GetSensorUpdatePolicyBuildsMacOutput) Alls() GetSensorUpdatePolicyBuildsMacAllArrayOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMac) []GetSensorUpdatePolicyBuildsMacAll { return v.Alls }).(GetSensorUpdatePolicyBuildsMacAllArrayOutput)
}

// The latest sensor build.
func (o GetSensorUpdatePolicyBuildsMacOutput) Latest() GetSensorUpdatePolicyBuildsMacLatestOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMac) GetSensorUpdatePolicyBuildsMacLatest { return v.Latest }).(GetSensorUpdatePolicyBuildsMacLatestOutput)
}

// The n-1 sensor build.
func (o GetSensorUpdatePolicyBuildsMacOutput) N1() GetSensorUpdatePolicyBuildsMacN1Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMac) GetSensorUpdatePolicyBuildsMacN1 { return v.N1 }).(GetSensorUpdatePolicyBuildsMacN1Output)
}

// The n-2 sensor build.
func (o GetSensorUpdatePolicyBuildsMacOutput) N2() GetSensorUpdatePolicyBuildsMacN2Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMac) GetSensorUpdatePolicyBuildsMacN2 { return v.N2 }).(GetSensorUpdatePolicyBuildsMacN2Output)
}

type GetSensorUpdatePolicyBuildsMacAll struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsMacAllInput is an input type that accepts GetSensorUpdatePolicyBuildsMacAllArgs and GetSensorUpdatePolicyBuildsMacAllOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsMacAllInput` via:
//
//	GetSensorUpdatePolicyBuildsMacAllArgs{...}
type GetSensorUpdatePolicyBuildsMacAllInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsMacAllOutput() GetSensorUpdatePolicyBuildsMacAllOutput
	ToGetSensorUpdatePolicyBuildsMacAllOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsMacAllOutput
}

type GetSensorUpdatePolicyBuildsMacAllArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsMacAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacAll)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsMacAllArgs) ToGetSensorUpdatePolicyBuildsMacAllOutput() GetSensorUpdatePolicyBuildsMacAllOutput {
	return i.ToGetSensorUpdatePolicyBuildsMacAllOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsMacAllArgs) ToGetSensorUpdatePolicyBuildsMacAllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsMacAllOutput)
}

// GetSensorUpdatePolicyBuildsMacAllArrayInput is an input type that accepts GetSensorUpdatePolicyBuildsMacAllArray and GetSensorUpdatePolicyBuildsMacAllArrayOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsMacAllArrayInput` via:
//
//	GetSensorUpdatePolicyBuildsMacAllArray{ GetSensorUpdatePolicyBuildsMacAllArgs{...} }
type GetSensorUpdatePolicyBuildsMacAllArrayInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsMacAllArrayOutput() GetSensorUpdatePolicyBuildsMacAllArrayOutput
	ToGetSensorUpdatePolicyBuildsMacAllArrayOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsMacAllArrayOutput
}

type GetSensorUpdatePolicyBuildsMacAllArray []GetSensorUpdatePolicyBuildsMacAllInput

func (GetSensorUpdatePolicyBuildsMacAllArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsMacAll)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsMacAllArray) ToGetSensorUpdatePolicyBuildsMacAllArrayOutput() GetSensorUpdatePolicyBuildsMacAllArrayOutput {
	return i.ToGetSensorUpdatePolicyBuildsMacAllArrayOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsMacAllArray) ToGetSensorUpdatePolicyBuildsMacAllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacAllArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsMacAllArrayOutput)
}

type GetSensorUpdatePolicyBuildsMacAllOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsMacAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacAll)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsMacAllOutput) ToGetSensorUpdatePolicyBuildsMacAllOutput() GetSensorUpdatePolicyBuildsMacAllOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacAllOutput) ToGetSensorUpdatePolicyBuildsMacAllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacAllOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsMacAllOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacAll) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsMacAllOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacAll) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsMacAllOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacAll) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsMacAllOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacAll) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsMacAllArrayOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsMacAllArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsMacAll)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsMacAllArrayOutput) ToGetSensorUpdatePolicyBuildsMacAllArrayOutput() GetSensorUpdatePolicyBuildsMacAllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacAllArrayOutput) ToGetSensorUpdatePolicyBuildsMacAllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacAllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacAllArrayOutput) Index(i pulumi.IntInput) GetSensorUpdatePolicyBuildsMacAllOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorUpdatePolicyBuildsMacAll {
		return vs[0].([]GetSensorUpdatePolicyBuildsMacAll)[vs[1].(int)]
	}).(GetSensorUpdatePolicyBuildsMacAllOutput)
}

type GetSensorUpdatePolicyBuildsMacLatest struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsMacLatestInput is an input type that accepts GetSensorUpdatePolicyBuildsMacLatestArgs and GetSensorUpdatePolicyBuildsMacLatestOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsMacLatestInput` via:
//
//	GetSensorUpdatePolicyBuildsMacLatestArgs{...}
type GetSensorUpdatePolicyBuildsMacLatestInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsMacLatestOutput() GetSensorUpdatePolicyBuildsMacLatestOutput
	ToGetSensorUpdatePolicyBuildsMacLatestOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsMacLatestOutput
}

type GetSensorUpdatePolicyBuildsMacLatestArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsMacLatestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacLatest)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsMacLatestArgs) ToGetSensorUpdatePolicyBuildsMacLatestOutput() GetSensorUpdatePolicyBuildsMacLatestOutput {
	return i.ToGetSensorUpdatePolicyBuildsMacLatestOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsMacLatestArgs) ToGetSensorUpdatePolicyBuildsMacLatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacLatestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsMacLatestOutput)
}

type GetSensorUpdatePolicyBuildsMacLatestOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsMacLatestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacLatest)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsMacLatestOutput) ToGetSensorUpdatePolicyBuildsMacLatestOutput() GetSensorUpdatePolicyBuildsMacLatestOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacLatestOutput) ToGetSensorUpdatePolicyBuildsMacLatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacLatestOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsMacLatestOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacLatest) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsMacLatestOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacLatest) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsMacLatestOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacLatest) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsMacLatestOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacLatest) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsMacN1 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsMacN1Input is an input type that accepts GetSensorUpdatePolicyBuildsMacN1Args and GetSensorUpdatePolicyBuildsMacN1Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsMacN1Input` via:
//
//	GetSensorUpdatePolicyBuildsMacN1Args{...}
type GetSensorUpdatePolicyBuildsMacN1Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsMacN1Output() GetSensorUpdatePolicyBuildsMacN1Output
	ToGetSensorUpdatePolicyBuildsMacN1OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsMacN1Output
}

type GetSensorUpdatePolicyBuildsMacN1Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsMacN1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacN1)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsMacN1Args) ToGetSensorUpdatePolicyBuildsMacN1Output() GetSensorUpdatePolicyBuildsMacN1Output {
	return i.ToGetSensorUpdatePolicyBuildsMacN1OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsMacN1Args) ToGetSensorUpdatePolicyBuildsMacN1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacN1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsMacN1Output)
}

type GetSensorUpdatePolicyBuildsMacN1Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsMacN1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacN1)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsMacN1Output) ToGetSensorUpdatePolicyBuildsMacN1Output() GetSensorUpdatePolicyBuildsMacN1Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacN1Output) ToGetSensorUpdatePolicyBuildsMacN1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacN1Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsMacN1Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN1) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsMacN1Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN1) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsMacN1Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN1) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsMacN1Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN1) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsMacN2 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsMacN2Input is an input type that accepts GetSensorUpdatePolicyBuildsMacN2Args and GetSensorUpdatePolicyBuildsMacN2Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsMacN2Input` via:
//
//	GetSensorUpdatePolicyBuildsMacN2Args{...}
type GetSensorUpdatePolicyBuildsMacN2Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsMacN2Output() GetSensorUpdatePolicyBuildsMacN2Output
	ToGetSensorUpdatePolicyBuildsMacN2OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsMacN2Output
}

type GetSensorUpdatePolicyBuildsMacN2Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsMacN2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacN2)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsMacN2Args) ToGetSensorUpdatePolicyBuildsMacN2Output() GetSensorUpdatePolicyBuildsMacN2Output {
	return i.ToGetSensorUpdatePolicyBuildsMacN2OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsMacN2Args) ToGetSensorUpdatePolicyBuildsMacN2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacN2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsMacN2Output)
}

type GetSensorUpdatePolicyBuildsMacN2Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsMacN2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacN2)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsMacN2Output) ToGetSensorUpdatePolicyBuildsMacN2Output() GetSensorUpdatePolicyBuildsMacN2Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsMacN2Output) ToGetSensorUpdatePolicyBuildsMacN2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsMacN2Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsMacN2Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN2) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsMacN2Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN2) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsMacN2Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN2) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsMacN2Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsMacN2) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsWindows struct {
	// All sensor builds for the specific platform.
	Alls []GetSensorUpdatePolicyBuildsWindowsAll `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsWindowsLatest `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsWindowsN1 `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsWindowsN2 `pulumi:"n2"`
}

// GetSensorUpdatePolicyBuildsWindowsInput is an input type that accepts GetSensorUpdatePolicyBuildsWindowsArgs and GetSensorUpdatePolicyBuildsWindowsOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsWindowsInput` via:
//
//	GetSensorUpdatePolicyBuildsWindowsArgs{...}
type GetSensorUpdatePolicyBuildsWindowsInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsWindowsOutput() GetSensorUpdatePolicyBuildsWindowsOutput
	ToGetSensorUpdatePolicyBuildsWindowsOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsWindowsOutput
}

type GetSensorUpdatePolicyBuildsWindowsArgs struct {
	// All sensor builds for the specific platform.
	Alls GetSensorUpdatePolicyBuildsWindowsAllArrayInput `pulumi:"alls"`
	// The latest sensor build.
	Latest GetSensorUpdatePolicyBuildsWindowsLatestInput `pulumi:"latest"`
	// The n-1 sensor build.
	N1 GetSensorUpdatePolicyBuildsWindowsN1Input `pulumi:"n1"`
	// The n-2 sensor build.
	N2 GetSensorUpdatePolicyBuildsWindowsN2Input `pulumi:"n2"`
}

func (GetSensorUpdatePolicyBuildsWindowsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindows)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsWindowsArgs) ToGetSensorUpdatePolicyBuildsWindowsOutput() GetSensorUpdatePolicyBuildsWindowsOutput {
	return i.ToGetSensorUpdatePolicyBuildsWindowsOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsWindowsArgs) ToGetSensorUpdatePolicyBuildsWindowsOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsWindowsOutput)
}

type GetSensorUpdatePolicyBuildsWindowsOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsWindowsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindows)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsWindowsOutput) ToGetSensorUpdatePolicyBuildsWindowsOutput() GetSensorUpdatePolicyBuildsWindowsOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsOutput) ToGetSensorUpdatePolicyBuildsWindowsOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsOutput {
	return o
}

// All sensor builds for the specific platform.
func (o GetSensorUpdatePolicyBuildsWindowsOutput) Alls() GetSensorUpdatePolicyBuildsWindowsAllArrayOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindows) []GetSensorUpdatePolicyBuildsWindowsAll { return v.Alls }).(GetSensorUpdatePolicyBuildsWindowsAllArrayOutput)
}

// The latest sensor build.
func (o GetSensorUpdatePolicyBuildsWindowsOutput) Latest() GetSensorUpdatePolicyBuildsWindowsLatestOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindows) GetSensorUpdatePolicyBuildsWindowsLatest { return v.Latest }).(GetSensorUpdatePolicyBuildsWindowsLatestOutput)
}

// The n-1 sensor build.
func (o GetSensorUpdatePolicyBuildsWindowsOutput) N1() GetSensorUpdatePolicyBuildsWindowsN1Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindows) GetSensorUpdatePolicyBuildsWindowsN1 { return v.N1 }).(GetSensorUpdatePolicyBuildsWindowsN1Output)
}

// The n-2 sensor build.
func (o GetSensorUpdatePolicyBuildsWindowsOutput) N2() GetSensorUpdatePolicyBuildsWindowsN2Output {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindows) GetSensorUpdatePolicyBuildsWindowsN2 { return v.N2 }).(GetSensorUpdatePolicyBuildsWindowsN2Output)
}

type GetSensorUpdatePolicyBuildsWindowsAll struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsWindowsAllInput is an input type that accepts GetSensorUpdatePolicyBuildsWindowsAllArgs and GetSensorUpdatePolicyBuildsWindowsAllOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsWindowsAllInput` via:
//
//	GetSensorUpdatePolicyBuildsWindowsAllArgs{...}
type GetSensorUpdatePolicyBuildsWindowsAllInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsWindowsAllOutput() GetSensorUpdatePolicyBuildsWindowsAllOutput
	ToGetSensorUpdatePolicyBuildsWindowsAllOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsWindowsAllOutput
}

type GetSensorUpdatePolicyBuildsWindowsAllArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsWindowsAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsAll)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsWindowsAllArgs) ToGetSensorUpdatePolicyBuildsWindowsAllOutput() GetSensorUpdatePolicyBuildsWindowsAllOutput {
	return i.ToGetSensorUpdatePolicyBuildsWindowsAllOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsWindowsAllArgs) ToGetSensorUpdatePolicyBuildsWindowsAllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsWindowsAllOutput)
}

// GetSensorUpdatePolicyBuildsWindowsAllArrayInput is an input type that accepts GetSensorUpdatePolicyBuildsWindowsAllArray and GetSensorUpdatePolicyBuildsWindowsAllArrayOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsWindowsAllArrayInput` via:
//
//	GetSensorUpdatePolicyBuildsWindowsAllArray{ GetSensorUpdatePolicyBuildsWindowsAllArgs{...} }
type GetSensorUpdatePolicyBuildsWindowsAllArrayInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutput() GetSensorUpdatePolicyBuildsWindowsAllArrayOutput
	ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsWindowsAllArrayOutput
}

type GetSensorUpdatePolicyBuildsWindowsAllArray []GetSensorUpdatePolicyBuildsWindowsAllInput

func (GetSensorUpdatePolicyBuildsWindowsAllArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsWindowsAll)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsWindowsAllArray) ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutput() GetSensorUpdatePolicyBuildsWindowsAllArrayOutput {
	return i.ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsWindowsAllArray) ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsAllArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsWindowsAllArrayOutput)
}

type GetSensorUpdatePolicyBuildsWindowsAllOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsWindowsAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsAll)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsWindowsAllOutput) ToGetSensorUpdatePolicyBuildsWindowsAllOutput() GetSensorUpdatePolicyBuildsWindowsAllOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsAllOutput) ToGetSensorUpdatePolicyBuildsWindowsAllOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsAllOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsAllOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsAll) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsWindowsAllOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsAll) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsAllOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsAll) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsWindowsAllOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsAll) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsWindowsAllArrayOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsWindowsAllArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSensorUpdatePolicyBuildsWindowsAll)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsWindowsAllArrayOutput) ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutput() GetSensorUpdatePolicyBuildsWindowsAllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsAllArrayOutput) ToGetSensorUpdatePolicyBuildsWindowsAllArrayOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsAllArrayOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsAllArrayOutput) Index(i pulumi.IntInput) GetSensorUpdatePolicyBuildsWindowsAllOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSensorUpdatePolicyBuildsWindowsAll {
		return vs[0].([]GetSensorUpdatePolicyBuildsWindowsAll)[vs[1].(int)]
	}).(GetSensorUpdatePolicyBuildsWindowsAllOutput)
}

type GetSensorUpdatePolicyBuildsWindowsLatest struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsWindowsLatestInput is an input type that accepts GetSensorUpdatePolicyBuildsWindowsLatestArgs and GetSensorUpdatePolicyBuildsWindowsLatestOutput values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsWindowsLatestInput` via:
//
//	GetSensorUpdatePolicyBuildsWindowsLatestArgs{...}
type GetSensorUpdatePolicyBuildsWindowsLatestInput interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsWindowsLatestOutput() GetSensorUpdatePolicyBuildsWindowsLatestOutput
	ToGetSensorUpdatePolicyBuildsWindowsLatestOutputWithContext(context.Context) GetSensorUpdatePolicyBuildsWindowsLatestOutput
}

type GetSensorUpdatePolicyBuildsWindowsLatestArgs struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsWindowsLatestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsLatest)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsWindowsLatestArgs) ToGetSensorUpdatePolicyBuildsWindowsLatestOutput() GetSensorUpdatePolicyBuildsWindowsLatestOutput {
	return i.ToGetSensorUpdatePolicyBuildsWindowsLatestOutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsWindowsLatestArgs) ToGetSensorUpdatePolicyBuildsWindowsLatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsLatestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsWindowsLatestOutput)
}

type GetSensorUpdatePolicyBuildsWindowsLatestOutput struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsWindowsLatestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsLatest)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsWindowsLatestOutput) ToGetSensorUpdatePolicyBuildsWindowsLatestOutput() GetSensorUpdatePolicyBuildsWindowsLatestOutput {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsLatestOutput) ToGetSensorUpdatePolicyBuildsWindowsLatestOutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsLatestOutput {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsLatestOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsLatest) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsWindowsLatestOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsLatest) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsLatestOutput) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsLatest) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsWindowsLatestOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsLatest) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsWindowsN1 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsWindowsN1Input is an input type that accepts GetSensorUpdatePolicyBuildsWindowsN1Args and GetSensorUpdatePolicyBuildsWindowsN1Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsWindowsN1Input` via:
//
//	GetSensorUpdatePolicyBuildsWindowsN1Args{...}
type GetSensorUpdatePolicyBuildsWindowsN1Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsWindowsN1Output() GetSensorUpdatePolicyBuildsWindowsN1Output
	ToGetSensorUpdatePolicyBuildsWindowsN1OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsWindowsN1Output
}

type GetSensorUpdatePolicyBuildsWindowsN1Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsWindowsN1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsN1)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsWindowsN1Args) ToGetSensorUpdatePolicyBuildsWindowsN1Output() GetSensorUpdatePolicyBuildsWindowsN1Output {
	return i.ToGetSensorUpdatePolicyBuildsWindowsN1OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsWindowsN1Args) ToGetSensorUpdatePolicyBuildsWindowsN1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsN1Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsWindowsN1Output)
}

type GetSensorUpdatePolicyBuildsWindowsN1Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsWindowsN1Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsN1)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsWindowsN1Output) ToGetSensorUpdatePolicyBuildsWindowsN1Output() GetSensorUpdatePolicyBuildsWindowsN1Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsN1Output) ToGetSensorUpdatePolicyBuildsWindowsN1OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsN1Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsN1Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN1) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsWindowsN1Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN1) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsN1Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN1) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsWindowsN1Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN1) string { return v.Stage }).(pulumi.StringOutput)
}

type GetSensorUpdatePolicyBuildsWindowsN2 struct {
	// The build number for a specific sensor version.
	Build string `pulumi:"build"`
	// The target platform for a the build.
	Platform string `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion string `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage string `pulumi:"stage"`
}

// GetSensorUpdatePolicyBuildsWindowsN2Input is an input type that accepts GetSensorUpdatePolicyBuildsWindowsN2Args and GetSensorUpdatePolicyBuildsWindowsN2Output values.
// You can construct a concrete instance of `GetSensorUpdatePolicyBuildsWindowsN2Input` via:
//
//	GetSensorUpdatePolicyBuildsWindowsN2Args{...}
type GetSensorUpdatePolicyBuildsWindowsN2Input interface {
	pulumi.Input

	ToGetSensorUpdatePolicyBuildsWindowsN2Output() GetSensorUpdatePolicyBuildsWindowsN2Output
	ToGetSensorUpdatePolicyBuildsWindowsN2OutputWithContext(context.Context) GetSensorUpdatePolicyBuildsWindowsN2Output
}

type GetSensorUpdatePolicyBuildsWindowsN2Args struct {
	// The build number for a specific sensor version.
	Build pulumi.StringInput `pulumi:"build"`
	// The target platform for a the build.
	Platform pulumi.StringInput `pulumi:"platform"`
	// CrowdStrike Falcon Sensor version.
	SensorVersion pulumi.StringInput `pulumi:"sensorVersion"`
	// The stage for the build.
	Stage pulumi.StringInput `pulumi:"stage"`
}

func (GetSensorUpdatePolicyBuildsWindowsN2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsN2)(nil)).Elem()
}

func (i GetSensorUpdatePolicyBuildsWindowsN2Args) ToGetSensorUpdatePolicyBuildsWindowsN2Output() GetSensorUpdatePolicyBuildsWindowsN2Output {
	return i.ToGetSensorUpdatePolicyBuildsWindowsN2OutputWithContext(context.Background())
}

func (i GetSensorUpdatePolicyBuildsWindowsN2Args) ToGetSensorUpdatePolicyBuildsWindowsN2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsN2Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetSensorUpdatePolicyBuildsWindowsN2Output)
}

type GetSensorUpdatePolicyBuildsWindowsN2Output struct{ *pulumi.OutputState }

func (GetSensorUpdatePolicyBuildsWindowsN2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsN2)(nil)).Elem()
}

func (o GetSensorUpdatePolicyBuildsWindowsN2Output) ToGetSensorUpdatePolicyBuildsWindowsN2Output() GetSensorUpdatePolicyBuildsWindowsN2Output {
	return o
}

func (o GetSensorUpdatePolicyBuildsWindowsN2Output) ToGetSensorUpdatePolicyBuildsWindowsN2OutputWithContext(ctx context.Context) GetSensorUpdatePolicyBuildsWindowsN2Output {
	return o
}

// The build number for a specific sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsN2Output) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN2) string { return v.Build }).(pulumi.StringOutput)
}

// The target platform for a the build.
func (o GetSensorUpdatePolicyBuildsWindowsN2Output) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN2) string { return v.Platform }).(pulumi.StringOutput)
}

// CrowdStrike Falcon Sensor version.
func (o GetSensorUpdatePolicyBuildsWindowsN2Output) SensorVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN2) string { return v.SensorVersion }).(pulumi.StringOutput)
}

// The stage for the build.
func (o GetSensorUpdatePolicyBuildsWindowsN2Output) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSensorUpdatePolicyBuildsWindowsN2) string { return v.Stage }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantagePolicyScheduledExclusionInput)(nil)).Elem(), FilevantagePolicyScheduledExclusionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantagePolicyScheduledExclusionArrayInput)(nil)).Elem(), FilevantagePolicyScheduledExclusionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantagePolicyScheduledExclusionRepeatedInput)(nil)).Elem(), FilevantagePolicyScheduledExclusionRepeatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantagePolicyScheduledExclusionRepeatedPtrInput)(nil)).Elem(), FilevantagePolicyScheduledExclusionRepeatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantageRuleGroupRuleInput)(nil)).Elem(), FilevantageRuleGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantageRuleGroupRuleArrayInput)(nil)).Elem(), FilevantageRuleGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyLinuxCloudAntiMalwareInput)(nil)).Elem(), PreventionPolicyLinuxCloudAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyLinuxCloudAntiMalwarePtrInput)(nil)).Elem(), PreventionPolicyLinuxCloudAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyLinuxSensorAntiMalwareInput)(nil)).Elem(), PreventionPolicyLinuxSensorAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyLinuxSensorAntiMalwarePtrInput)(nil)).Elem(), PreventionPolicyLinuxSensorAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacCloudAdwareAndPupInput)(nil)).Elem(), PreventionPolicyMacCloudAdwareAndPupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacCloudAdwareAndPupPtrInput)(nil)).Elem(), PreventionPolicyMacCloudAdwareAndPupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacCloudAntiMalwareInput)(nil)).Elem(), PreventionPolicyMacCloudAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacCloudAntiMalwarePtrInput)(nil)).Elem(), PreventionPolicyMacCloudAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacSensorAdwareAndPupInput)(nil)).Elem(), PreventionPolicyMacSensorAdwareAndPupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacSensorAdwareAndPupPtrInput)(nil)).Elem(), PreventionPolicyMacSensorAdwareAndPupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacSensorAntiMalwareInput)(nil)).Elem(), PreventionPolicyMacSensorAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyMacSensorAntiMalwarePtrInput)(nil)).Elem(), PreventionPolicyMacSensorAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsAdwareAndPupInput)(nil)).Elem(), PreventionPolicyWindowsAdwareAndPupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsAdwareAndPupPtrInput)(nil)).Elem(), PreventionPolicyWindowsAdwareAndPupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareInput)(nil)).Elem(), PreventionPolicyWindowsCloudAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwarePtrInput)(nil)).Elem(), PreventionPolicyWindowsCloudAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesInput)(nil)).Elem(), PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrInput)(nil)).Elem(), PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareUserInitiatedInput)(nil)).Elem(), PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrInput)(nil)).Elem(), PreventionPolicyWindowsCloudAntiMalwareUserInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsExtendedUserModeDataInput)(nil)).Elem(), PreventionPolicyWindowsExtendedUserModeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsExtendedUserModeDataPtrInput)(nil)).Elem(), PreventionPolicyWindowsExtendedUserModeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalwareInput)(nil)).Elem(), PreventionPolicyWindowsSensorAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalwarePtrInput)(nil)).Elem(), PreventionPolicyWindowsSensorAntiMalwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalwareUserInitiatedInput)(nil)).Elem(), PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrInput)(nil)).Elem(), PreventionPolicyWindowsSensorAntiMalwareUserInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorUpdatePolicyScheduleInput)(nil)).Elem(), SensorUpdatePolicyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorUpdatePolicySchedulePtrInput)(nil)).Elem(), SensorUpdatePolicyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorUpdatePolicyScheduleTimeBlockInput)(nil)).Elem(), SensorUpdatePolicyScheduleTimeBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensorUpdatePolicyScheduleTimeBlockArrayInput)(nil)).Elem(), SensorUpdatePolicyScheduleTimeBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxAllInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxAllArrayInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxAllArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArm64Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64AllInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArm64AllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64AllArrayInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArm64AllArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64LatestInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArm64LatestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64N1Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArm64N1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxArm64N2Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxArm64N2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxLatestInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxLatestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxN1Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxN1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsLinuxN2Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsLinuxN2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsMacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacAllInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsMacAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacAllArrayInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsMacAllArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacLatestInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsMacLatestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacN1Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsMacN1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsMacN2Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsMacN2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsWindowsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsAllInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsWindowsAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsAllArrayInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsWindowsAllArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsLatestInput)(nil)).Elem(), GetSensorUpdatePolicyBuildsWindowsLatestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsN1Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsWindowsN1Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSensorUpdatePolicyBuildsWindowsN2Input)(nil)).Elem(), GetSensorUpdatePolicyBuildsWindowsN2Args{})
	pulumi.RegisterOutputType(FilevantagePolicyScheduledExclusionOutput{})
	pulumi.RegisterOutputType(FilevantagePolicyScheduledExclusionArrayOutput{})
	pulumi.RegisterOutputType(FilevantagePolicyScheduledExclusionRepeatedOutput{})
	pulumi.RegisterOutputType(FilevantagePolicyScheduledExclusionRepeatedPtrOutput{})
	pulumi.RegisterOutputType(FilevantageRuleGroupRuleOutput{})
	pulumi.RegisterOutputType(FilevantageRuleGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(PreventionPolicyLinuxCloudAntiMalwareOutput{})
	pulumi.RegisterOutputType(PreventionPolicyLinuxCloudAntiMalwarePtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyLinuxSensorAntiMalwareOutput{})
	pulumi.RegisterOutputType(PreventionPolicyLinuxSensorAntiMalwarePtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacCloudAdwareAndPupOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacCloudAdwareAndPupPtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacCloudAntiMalwareOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacCloudAntiMalwarePtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacSensorAdwareAndPupOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacSensorAdwareAndPupPtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacSensorAntiMalwareOutput{})
	pulumi.RegisterOutputType(PreventionPolicyMacSensorAntiMalwarePtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsAdwareAndPupOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsAdwareAndPupPtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsCloudAntiMalwareOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsCloudAntiMalwarePtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsCloudAntiMalwareMicrosoftOfficeFilesPtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsCloudAntiMalwareUserInitiatedPtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsExtendedUserModeDataOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsExtendedUserModeDataPtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsSensorAntiMalwareOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsSensorAntiMalwarePtrOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedOutput{})
	pulumi.RegisterOutputType(PreventionPolicyWindowsSensorAntiMalwareUserInitiatedPtrOutput{})
	pulumi.RegisterOutputType(SensorUpdatePolicyScheduleOutput{})
	pulumi.RegisterOutputType(SensorUpdatePolicySchedulePtrOutput{})
	pulumi.RegisterOutputType(SensorUpdatePolicyScheduleTimeBlockOutput{})
	pulumi.RegisterOutputType(SensorUpdatePolicyScheduleTimeBlockArrayOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxAllOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxAllArrayOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxArm64Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxArm64AllOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxArm64AllArrayOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxArm64LatestOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxArm64N1Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxArm64N2Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxLatestOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxN1Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsLinuxN2Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsMacOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsMacAllOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsMacAllArrayOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsMacLatestOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsMacN1Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsMacN2Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsWindowsOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsWindowsAllOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsWindowsAllArrayOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsWindowsLatestOutput{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsWindowsN1Output{})
	pulumi.RegisterOutputType(GetSensorUpdatePolicyBuildsWindowsN2Output{})
}
