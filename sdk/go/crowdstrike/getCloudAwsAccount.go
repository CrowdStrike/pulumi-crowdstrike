// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package crowdstrike

import (
	"context"
	"reflect"

	"github.com/crowdstrike/pulumi-crowdstrike/sdk/go/crowdstrike/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides information about AWS accounts in Falcon.
//
// ## API Scopes
//
// The following API scopes are required:
//
// - Cloud security AWS registration | Read & Write
// - CSPM registration | Read & Write
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/crowdstrike/pulumi-crowdstrike/sdk/go/crowdstrike"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := crowdstrike.LookupCloudAwsAccount(ctx, &crowdstrike.LookupCloudAwsAccountArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = crowdstrike.LookupCloudAwsAccount(ctx, &crowdstrike.LookupCloudAwsAccountArgs{
//				AccountId: pulumi.StringRef("123456789012"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = crowdstrike.LookupCloudAwsAccount(ctx, &crowdstrike.LookupCloudAwsAccountArgs{
//				OrganizationId: pulumi.StringRef("o-123456789012"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCloudAwsAccount(ctx *pulumi.Context, args *LookupCloudAwsAccountArgs, opts ...pulumi.InvokeOption) (*LookupCloudAwsAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudAwsAccountResult
	err := ctx.Invoke("crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudAwsAccount.
type LookupCloudAwsAccountArgs struct {
	// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organizationId filter for OR matching
	AccountId *string `pulumi:"accountId"`
	// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with accountId filter for OR matching
	OrganizationId *string `pulumi:"organizationId"`
}

// A collection of values returned by getCloudAwsAccount.
type LookupCloudAwsAccountResult struct {
	// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organizationId filter for OR matching
	AccountId *string `pulumi:"accountId"`
	// The list of AWS accounts
	Accounts []GetCloudAwsAccountAccount `pulumi:"accounts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with accountId filter for OR matching
	OrganizationId *string `pulumi:"organizationId"`
}

func LookupCloudAwsAccountOutput(ctx *pulumi.Context, args LookupCloudAwsAccountOutputArgs, opts ...pulumi.InvokeOption) LookupCloudAwsAccountResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudAwsAccountResultOutput, error) {
			args := v.(LookupCloudAwsAccountArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("crowdstrike:index/getCloudAwsAccount:getCloudAwsAccount", args, LookupCloudAwsAccountResultOutput{}, options).(LookupCloudAwsAccountResultOutput), nil
		}).(LookupCloudAwsAccountResultOutput)
}

// A collection of arguments for invoking getCloudAwsAccount.
type LookupCloudAwsAccountOutputArgs struct {
	// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organizationId filter for OR matching
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with accountId filter for OR matching
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
}

func (LookupCloudAwsAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudAwsAccountArgs)(nil)).Elem()
}

// A collection of values returned by getCloudAwsAccount.
type LookupCloudAwsAccountResultOutput struct{ *pulumi.OutputState }

func (LookupCloudAwsAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudAwsAccountResult)(nil)).Elem()
}

func (o LookupCloudAwsAccountResultOutput) ToLookupCloudAwsAccountResultOutput() LookupCloudAwsAccountResultOutput {
	return o
}

func (o LookupCloudAwsAccountResultOutput) ToLookupCloudAwsAccountResultOutputWithContext(ctx context.Context) LookupCloudAwsAccountResultOutput {
	return o
}

// Filter the results to a specific AWS Account ID. When specified, returns details for the matching AWS account. Can be used together with organizationId filter for OR matching
func (o LookupCloudAwsAccountResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudAwsAccountResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The list of AWS accounts
func (o LookupCloudAwsAccountResultOutput) Accounts() GetCloudAwsAccountAccountArrayOutput {
	return o.ApplyT(func(v LookupCloudAwsAccountResult) []GetCloudAwsAccountAccount { return v.Accounts }).(GetCloudAwsAccountAccountArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudAwsAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudAwsAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filter the results to accounts within a specific AWS Organization. When specified, returns all AWS accounts associated with this organization ID. Can be used together with accountId filter for OR matching
func (o LookupCloudAwsAccountResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudAwsAccountResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudAwsAccountResultOutput{})
}
