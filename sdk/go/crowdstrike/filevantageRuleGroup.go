// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package crowdstrike

import (
	"context"
	"reflect"

	"github.com/crowdstrike/pulumi-crowdstrike/sdk/go/crowdstrike/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows management of a FileVantage rule group. A FileVantage rule group is a collection of file integrity rules that can be assigned to a FileVantge policy.
//
// ## API Scopes
//
// The following API scopes are required:
//
// - Falcon FileVantage | Read & Write
//
// ## Import
//
// filevantage rule group can be imported by specifying the policy id.
//
// ```sh
// $ pulumi import crowdstrike:index/filevantageRuleGroup:FilevantageRuleGroup example 7fb858a949034a0cbca175f660f1e769
// ```
type FilevantageRuleGroup struct {
	pulumi.CustomResourceState

	// Description of the filevantage rule group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	LastUpdated pulumi.StringOutput    `pulumi:"lastUpdated"`
	// Name of the filevantage rule group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Rules to be associated with the rule group. Precedence is determined by the order of the rules in the list.
	Rules FilevantageRuleGroupRuleArrayOutput `pulumi:"rules"`
	// The type of filevantage rule group.
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewFilevantageRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewFilevantageRuleGroup(ctx *pulumi.Context,
	name string, args *FilevantageRuleGroupArgs, opts ...pulumi.ResourceOption) (*FilevantageRuleGroup, error) {
	if args == nil {
		args = &FilevantageRuleGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FilevantageRuleGroup
	err := ctx.RegisterResource("crowdstrike:index/filevantageRuleGroup:FilevantageRuleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFilevantageRuleGroup gets an existing FilevantageRuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFilevantageRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FilevantageRuleGroupState, opts ...pulumi.ResourceOption) (*FilevantageRuleGroup, error) {
	var resource FilevantageRuleGroup
	err := ctx.ReadResource("crowdstrike:index/filevantageRuleGroup:FilevantageRuleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FilevantageRuleGroup resources.
type filevantageRuleGroupState struct {
	// Description of the filevantage rule group.
	Description *string `pulumi:"description"`
	LastUpdated *string `pulumi:"lastUpdated"`
	// Name of the filevantage rule group.
	Name *string `pulumi:"name"`
	// Rules to be associated with the rule group. Precedence is determined by the order of the rules in the list.
	Rules []FilevantageRuleGroupRule `pulumi:"rules"`
	// The type of filevantage rule group.
	Type *string `pulumi:"type"`
}

type FilevantageRuleGroupState struct {
	// Description of the filevantage rule group.
	Description pulumi.StringPtrInput
	LastUpdated pulumi.StringPtrInput
	// Name of the filevantage rule group.
	Name pulumi.StringPtrInput
	// Rules to be associated with the rule group. Precedence is determined by the order of the rules in the list.
	Rules FilevantageRuleGroupRuleArrayInput
	// The type of filevantage rule group.
	Type pulumi.StringPtrInput
}

func (FilevantageRuleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*filevantageRuleGroupState)(nil)).Elem()
}

type filevantageRuleGroupArgs struct {
	// Description of the filevantage rule group.
	Description *string `pulumi:"description"`
	// Name of the filevantage rule group.
	Name *string `pulumi:"name"`
	// Rules to be associated with the rule group. Precedence is determined by the order of the rules in the list.
	Rules []FilevantageRuleGroupRule `pulumi:"rules"`
	// The type of filevantage rule group.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a FilevantageRuleGroup resource.
type FilevantageRuleGroupArgs struct {
	// Description of the filevantage rule group.
	Description pulumi.StringPtrInput
	// Name of the filevantage rule group.
	Name pulumi.StringPtrInput
	// Rules to be associated with the rule group. Precedence is determined by the order of the rules in the list.
	Rules FilevantageRuleGroupRuleArrayInput
	// The type of filevantage rule group.
	Type pulumi.StringPtrInput
}

func (FilevantageRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*filevantageRuleGroupArgs)(nil)).Elem()
}

type FilevantageRuleGroupInput interface {
	pulumi.Input

	ToFilevantageRuleGroupOutput() FilevantageRuleGroupOutput
	ToFilevantageRuleGroupOutputWithContext(ctx context.Context) FilevantageRuleGroupOutput
}

func (*FilevantageRuleGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**FilevantageRuleGroup)(nil)).Elem()
}

func (i *FilevantageRuleGroup) ToFilevantageRuleGroupOutput() FilevantageRuleGroupOutput {
	return i.ToFilevantageRuleGroupOutputWithContext(context.Background())
}

func (i *FilevantageRuleGroup) ToFilevantageRuleGroupOutputWithContext(ctx context.Context) FilevantageRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantageRuleGroupOutput)
}

// FilevantageRuleGroupArrayInput is an input type that accepts FilevantageRuleGroupArray and FilevantageRuleGroupArrayOutput values.
// You can construct a concrete instance of `FilevantageRuleGroupArrayInput` via:
//
//	FilevantageRuleGroupArray{ FilevantageRuleGroupArgs{...} }
type FilevantageRuleGroupArrayInput interface {
	pulumi.Input

	ToFilevantageRuleGroupArrayOutput() FilevantageRuleGroupArrayOutput
	ToFilevantageRuleGroupArrayOutputWithContext(context.Context) FilevantageRuleGroupArrayOutput
}

type FilevantageRuleGroupArray []FilevantageRuleGroupInput

func (FilevantageRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FilevantageRuleGroup)(nil)).Elem()
}

func (i FilevantageRuleGroupArray) ToFilevantageRuleGroupArrayOutput() FilevantageRuleGroupArrayOutput {
	return i.ToFilevantageRuleGroupArrayOutputWithContext(context.Background())
}

func (i FilevantageRuleGroupArray) ToFilevantageRuleGroupArrayOutputWithContext(ctx context.Context) FilevantageRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantageRuleGroupArrayOutput)
}

// FilevantageRuleGroupMapInput is an input type that accepts FilevantageRuleGroupMap and FilevantageRuleGroupMapOutput values.
// You can construct a concrete instance of `FilevantageRuleGroupMapInput` via:
//
//	FilevantageRuleGroupMap{ "key": FilevantageRuleGroupArgs{...} }
type FilevantageRuleGroupMapInput interface {
	pulumi.Input

	ToFilevantageRuleGroupMapOutput() FilevantageRuleGroupMapOutput
	ToFilevantageRuleGroupMapOutputWithContext(context.Context) FilevantageRuleGroupMapOutput
}

type FilevantageRuleGroupMap map[string]FilevantageRuleGroupInput

func (FilevantageRuleGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FilevantageRuleGroup)(nil)).Elem()
}

func (i FilevantageRuleGroupMap) ToFilevantageRuleGroupMapOutput() FilevantageRuleGroupMapOutput {
	return i.ToFilevantageRuleGroupMapOutputWithContext(context.Background())
}

func (i FilevantageRuleGroupMap) ToFilevantageRuleGroupMapOutputWithContext(ctx context.Context) FilevantageRuleGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilevantageRuleGroupMapOutput)
}

type FilevantageRuleGroupOutput struct{ *pulumi.OutputState }

func (FilevantageRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilevantageRuleGroup)(nil)).Elem()
}

func (o FilevantageRuleGroupOutput) ToFilevantageRuleGroupOutput() FilevantageRuleGroupOutput {
	return o
}

func (o FilevantageRuleGroupOutput) ToFilevantageRuleGroupOutputWithContext(ctx context.Context) FilevantageRuleGroupOutput {
	return o
}

// Description of the filevantage rule group.
func (o FilevantageRuleGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilevantageRuleGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FilevantageRuleGroupOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v *FilevantageRuleGroup) pulumi.StringOutput { return v.LastUpdated }).(pulumi.StringOutput)
}

// Name of the filevantage rule group.
func (o FilevantageRuleGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FilevantageRuleGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Rules to be associated with the rule group. Precedence is determined by the order of the rules in the list.
func (o FilevantageRuleGroupOutput) Rules() FilevantageRuleGroupRuleArrayOutput {
	return o.ApplyT(func(v *FilevantageRuleGroup) FilevantageRuleGroupRuleArrayOutput { return v.Rules }).(FilevantageRuleGroupRuleArrayOutput)
}

// The type of filevantage rule group.
func (o FilevantageRuleGroupOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilevantageRuleGroup) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type FilevantageRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (FilevantageRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FilevantageRuleGroup)(nil)).Elem()
}

func (o FilevantageRuleGroupArrayOutput) ToFilevantageRuleGroupArrayOutput() FilevantageRuleGroupArrayOutput {
	return o
}

func (o FilevantageRuleGroupArrayOutput) ToFilevantageRuleGroupArrayOutputWithContext(ctx context.Context) FilevantageRuleGroupArrayOutput {
	return o
}

func (o FilevantageRuleGroupArrayOutput) Index(i pulumi.IntInput) FilevantageRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FilevantageRuleGroup {
		return vs[0].([]*FilevantageRuleGroup)[vs[1].(int)]
	}).(FilevantageRuleGroupOutput)
}

type FilevantageRuleGroupMapOutput struct{ *pulumi.OutputState }

func (FilevantageRuleGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FilevantageRuleGroup)(nil)).Elem()
}

func (o FilevantageRuleGroupMapOutput) ToFilevantageRuleGroupMapOutput() FilevantageRuleGroupMapOutput {
	return o
}

func (o FilevantageRuleGroupMapOutput) ToFilevantageRuleGroupMapOutputWithContext(ctx context.Context) FilevantageRuleGroupMapOutput {
	return o
}

func (o FilevantageRuleGroupMapOutput) MapIndex(k pulumi.StringInput) FilevantageRuleGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FilevantageRuleGroup {
		return vs[0].(map[string]*FilevantageRuleGroup)[vs[1].(string)]
	}).(FilevantageRuleGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantageRuleGroupInput)(nil)).Elem(), &FilevantageRuleGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantageRuleGroupArrayInput)(nil)).Elem(), FilevantageRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilevantageRuleGroupMapInput)(nil)).Elem(), FilevantageRuleGroupMap{})
	pulumi.RegisterOutputType(FilevantageRuleGroupOutput{})
	pulumi.RegisterOutputType(FilevantageRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(FilevantageRuleGroupMapOutput{})
}
